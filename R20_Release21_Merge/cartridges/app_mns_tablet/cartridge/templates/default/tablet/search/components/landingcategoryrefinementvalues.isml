<isinclude template="tablet/util/modules"/>

<iscomment>memorize some locale variables for reuse</iscomment>
<isset name="SearchModel" value="${pdict.searchmodel}" scope="page"/>
<isset name="Category" value="${pdict.category}" scope="page"/>
<isset name="CategoryPath" value="${pdict.categorypath}" scope="page"/>
<isset name="Refinements" value="${pdict.searchmodel.refinements}" scope="page"/>
<isset name="CategoryLevel" value="${new Number(pdict.categorylevel)}" scope="page"/>
<isset name="CategoryGroup" value="" scope="page"/>
<isset name="scene7ImageForSearchBar" value="" scope="page"/>
<isset name="scene7ImageType" value="" scope="page"/>
	<isloop items="${dw.system.Site.getCurrent().preferences.custom.ImageTypesDimension}" alias="ImageTypeDimensionObj">	
		<isscript>
		if (ImageTypeDimensionObj.getValue() == 'tablet_launchpad') {
				scene7ImageForSearchBar = ImageTypeDimensionObj.getDisplayValue();
				scene7ImageType = ImageTypeDimensionObj.getValue();
				scene7ImageTypeDimension = ImageTypeDimensionObj.getDisplayValue();
				}
		</isscript>	
	</isloop>

<isscript>
	importScript('app_mns:tablet/Utils.ds');
	var sortingRule : SortingRule = dw.catalog.CatalogMgr.getSortingRule("New Arrival");		
	var IDPath = new dw.util.ArrayList();

	if(CategoryPath != null)
	{
		// remove the first level successively
		if(CategoryPath.size() > 0)
		{
			CategoryPath.removeAt(0);
		}

		// build array list of category IDs
		var pathIterator = CategoryPath.iterator();
		while( pathIterator.hasNext() )
		{
			IDPath.add( pathIterator.next().ID );
		}
	}
	
		var categoryType : String=null;
		var isUpdatedCategoryType : Boolean = false;
		var defaultDisplayed : Boolean = false;
	
</isscript>
<isif condition="${SearchModel != null}">
	<iscomment>
		in case the given category is the current refinement category we render the
		next level category refinement values for that category using the search refinements;
		in case the given category is not the current refinement category we use the
		online sub categories independent of the search result!
	</iscomment>
	<isif condition="${empty(Category) || SearchModel.categoryID == Category.ID}">
		<div id="launch-pad">
			<iscomment>display the next level category refinement values for the given category</iscomment>
			<isset name="RefinementValues" value="${Refinements.getNextLevelCategoryRefinementValues(Category)}" scope="page"/>
			<isscript>
				var categoryList : dw.util.ArrayList = new dw.util.ArrayList();
			</isscript>
			<isif condition="${RefinementValues.size() > 0}">
				<iscomment><!-- Changed the class="refinementcategory" wrapper to make it same as VD | Asha | 04-mar-2011 --></iscomment>
				<isloop items="${RefinementValues}" var="RefinementValue">
					<iscomment>get the category object</iscomment>
					<isset name="categoryObj" value="${dw.catalog.CatalogMgr.getCategory( RefinementValue.getValue() )}" scope="page"/>
					<isscript>
						if (!categoryObj.custom.notInLaunchPad){
							categoryList.add(categoryObj);
						}
					</isscript>
				</isloop>	
				<isscript>
					var  propCompare : dw.util.PropertyComparator = new dw.util.PropertyComparator("custom.categoryType");
					categoryList.sort(propCompare);
					var categoryIDList : dw.util.Map = new dw.util.HashMap();
					var catList : dw.util.List = new dw.util.ArrayList();
					var count : Number = 0;
				</isscript>
				<isset name="launchPadImgIndex" value="${new Number('0')}" scope="page"/>
				<isloop items="${categoryList}" var="catObj" status="loopstate">
					<isscript>
						if(null == categoryType || categoryType!=catObj.custom.categoryType){							
							if(!empty(catList)){
							categoryIDList.put(categoryType.slice(categoryType.indexOf(' ')+1,categoryType.length),catList);
						    catList = new dw.util.ArrayList();
							}
							categoryType = catObj.custom.categoryType;
							
							if(loopstate.last){
								catList = new dw.util.ArrayList();
								catList.add(catObj.ID);
								categoryIDList.put(categoryType.slice(categoryType.indexOf(' ')+1,categoryType.length),catList);
							    catList = new dw.util.ArrayList();
							}
							
							isUpdatedCategoryType = true;
							count++
							
						}else{
							if(loopstate.last){
							catList.add(catObj.ID);
							categoryIDList.put(categoryType.slice(categoryType.indexOf(' ')+1,categoryType.length),catList);
						    catList = new dw.util.ArrayList();
							}else{
							catList.add(catObj.ID);
							}
						}
					
					</isscript>
					<isif condition="${isUpdatedCategoryType==true}">
						<isif condition="${launchPadImgIndex%4==0}">
							<div class="category-outside clearfix">
						</isif>
							<div class="category">
							<div class="inner-wrapper">
								<div class="main-category">
									<iscomment>Tablet Launchpad: display image of newest product for each category group</iscomment>
								    <isscript>
								  		catList.add(catObj.ID);
								  		var scene7ImageUrl :String ="";
								  	    var catImageUrl  = catObj.thumbnail;
								  		if(empty(catObj.thumbnail)){
										var thumbnailUrl : String = getFirstProductImage(catObj,sortingRule);	
														
										scene7ImageUrl = thumbnailUrl + scene7ImageForSearchBar;
										}else{
										scene7ImageUrl = catImageUrl.URL;
										}
									</isscript>
									<a href="" title=""><img src="${scene7ImageUrl}" alt="${categoryType}" title="${categoryType}" /></a>
									<isif condition="${null == categoryType && !defaultDisplayed}">
										<h3 class="closed">
											<isset name="categoryType" value="${dw.system.Site.current.preferences.custom.defaultCategoryType.toString()}" scope="page"/>
											<span><isprint value="${categoryType.slice(categoryType.indexOf(' ')+1,categoryType.length)}"/></span>
										</h3>	<!-- Group Name --> 
										<isset name="defaultDisplayed" value="${true}" scope="page"/>
									<iselseif condition="${null != categoryType}" >
										<h3 class="closed">
											<iscomment>Praveen: Changes made for Category Ordering changes CR</iscomment>
											<span><isprint value="${categoryType.slice(categoryType.indexOf(' ')+1,categoryType.length)}"/> </span>
										</h3>
									</isif>						
									<isscript>							
										isUpdatedCategoryType = false;
									</isscript>
								</div>
							</div>
						</div>
						<isif condition="${launchPadImgIndex%4==3}">
							<div class="clear"></div>					
							</div>
						</isif>
						<isset name="launchPadImgIndex" value="${launchPadImgIndex+1}" scope="page"/>	
					</isif>	
					<iscomment>				
						<li class="lhn-li">
							<a class="refineLink <isif condition="${IDPath.contains(catObj.getID())}"> active</isif>" title="${catObj.ID}" href="${SearchModel.urlRefineCategory('Search-Show',catObj.getID())}"><isprint value="${catObj.getDisplayName()}"/></a>
						</li>
					</iscomment>
				</isloop>
			</isif>
			<isif condition="${launchPadImgIndex%4!=0}">
				<isset name="slotCount" value="${(4-launchPadImgIndex%4).toString()}" scope="page"/>
				<div class="launchpadslot${slotCount}">
					<isslot id="launchpadslot" description="launchpad slot" context="global" />
				</div>
				<div class="clear"></div>
				</div>
			</isif>		
		</div>
	</isif>
<isloop items="${categoryIDList.keySet()}" var="catGroup" status="loopState">
		<isscript>var cat : String ="";</isscript>
		<isloop items="${categoryIDList.get(catGroup)}" var="catID" status="loopstate">
			<isscript>
			if(loopstate.first){
				cat = catID;
				}else{
				cat = cat + "," +catID;
				}
			</isscript>
		</isloop>
		<input type="hidden" name="${catGroup.trim()}" value="${cat}"/>
	</isloop>
</isif>
<script type="text/javascript">
	<!--
	<!--
	function htmlEscape(str) {
	    return str.replace(/&/g, '&amp;')
	            .replace(/"/g, '&quot;')
	            .replace(/'/g, '&#39;')
	            .replace(/</g, '&lt;')
	            .replace(/>/g, '&gt;');
	}
	// total height calculation for category
	var setCatHeight = function (){
		var max = 0,
		$catImg = jQ(".category-outside").find(".main-category a").children('img'),
		$mainCat = jQ(".category-outside").find(".main-category");
		$slot = jQ(".category-outside").find(".lpSlot");
		//get height
		$catImg.each(function() {
			var h = jQ(this).height(); 
			max = h > max ? h : max;
		});
		//set height
		$mainCat.each(function() {
			jQ(this).css('height',max+'px');	
		});
		$slot.each(function() {
			jQ(this).css('height',max+'px');	
		});
		
	};
	// adjust pull downin orientation change
	var adjustPullDown = function(){
		var $activeSubCat= jQ('.sub-category.active'),
		$subCatWrapper = $activeSubCat.find('.sub-category-wrapper'),
		catHeight,
		subCatHeight;
		catHeight = jQ('.category:eq(0)').height();   
		if($activeSubCat.length){
			$activeSubCat.css({'top': catHeight});
			//subCatHeight = $activeSubCat.find('.sub-category-wrapper li:eq(0)').height();
			//$activeSubCat.find('[class^="col-"]').find('a').height(subCatHeight);   
			jQ('.pull-down').height(0).height($subCatWrapper.height());
		}
	};
	// adjust pull downin orientation change ends
	//overaly interactions to close launch pad begins
	
	var overlayClose = function(){
		var $overlayDiv = jQ(".overlay");
		if($overlayDiv.length){	
			jQ($overlayDiv).on('click',function(){
				jQ('.main-category h3.open').trigger('click');
			});
		}
	}
	//overaly interactions to close launch pad ends
	jQ(document).ready(function(){
		setCatHeight();
		overlayClose();
		// Orientation Change Logic For Sub Category - Anoop
		var mql = window.matchMedia("(orientation: portrait)");
		// Add a media query change listener
		mql.addListener(function(m) {
			var catHeight,
			subCatHeight;
			if(m.matches) {
				//Portrait orientation 
				setCatHeight();
				adjustPullDown();
			} else {
				//Landscape orientation
				//Portrait orientation 
				setCatHeight();
				adjustPullDown();    
			}
		});
		// Orientation Change Logic For Sub Category - Anoop Ends
		
		//var ulData = jQ('<ul/>').html('<li><a href="#"><img alt="" src="index_files/new-exclusive-category.jpg"><span>New in</span></a></li><li><a href="#"><img alt="" src="index_files/as-advertised-category.jpg"><span>As advertised</span></a></li><li><a href="#"><img alt="" src="index_files/berry-patterns-category.jpg"><span>Berry Patterns</span></a></li><li style="border-right: 0px none;"><a href="#"><img alt="" src="index_files/biker-chic-category.jpg"><span>Biker Chic</span></a></li><li><a href="#"><img alt="" src="index_files/country-luxe-category.jpg"><span>Country Luxe</span></a></li><li><a href="#"><img alt="" src="index_files/dress-size-category.jpg"><span>Drop a Dress Size</span></a></li><li><a href="#"><img alt="" src="index_files/eastern-promise-category.jpg"><span>Eastern Promise</span></a></li><li style="border-right: 0px none;"><a href="#"><img alt="" src="index_files/exclusive-order-category.jpg"><span>Exclusive to order</span></a></li><li><a href="#"><img alt="" src="index_files/exclusive-order-category2.jpg"><span>Exclusive to order</span></a></li>');
		//var ulHeight = jQ(ulData).height();
		//var catMap = '${categoryIDList}';
		var cache = {}; 
		function getajaxdata( val, url ){
			return jQ.ajax({
				dataType: "html",
				url		: url,
				cache	: false,
				success: function(response, textStatus) {
					cache[val] = response;
				},
				error: function(request, textStatus, error) {
					if (textStatus === "parsererror") {								
						
					}
				}
			});
			
		}
		
		jQ(".category-outside").on('click',".category", function(evt){
			// launch pad sub category fix - Anoop   
			if(jQ(evt.target).closest('div').attr('class') === 'sub-category-wrapper'){
				var subCatURL = jQ(evt.target).closest('a').attr('href');
				window.location.href = subCatURL;
				return false;
			}else{
				evt.preventDefault(); 
			}
			// launch pad sub category fix - Anoop   ends
			if (jQ(this).find('h3').hasClass('open')){
				var _this = jQ(this),
				scrollHeight = _this.find('.sub-category-wrapper li:eq(0)').height();
				jQ(".overlay").fadeToggle(300);
				_this.find('.inner-wrapper .sub-category').css({'visibility': 'hidden'}).removeClass('active');
				jQ(this).find('ul').hide();
				jQ(this).find('h3').css({'z-index': ''}).removeClass('open');
				jQ(this).find('.main-category').css({'z-index': ''});           
				_this.parent().parent().find('.pull-down').remove();
				//Davinder: no scroll when sub categories closed.
				//jQ('html, body').animate({
					//scrollTop: jQ(window).scrollTop() - scrollHeight
				//}, 300);
			} else {
				//Davinder Kumar: making the page move up only when thumbnail is at bottom position
				//JIRA INT - 228.
				eTop = jQ(this).offset().top;
				windowHeight = jQ(window).height();
				elemHeight = jQ(this).height();
				dynaPosition = eTop - jQ(window).scrollTop();
				restWindow = windowHeight - 100 - elemHeight;
				lastCalcOnWindow = restWindow;
				if(dynaPosition > lastCalcOnWindow){
					jQ('html, body').animate({
						scrollTop: jQ(window).scrollTop() + elemHeight
					}, 300);
				}
				//JIRA INT - 228. Ends Here //
				
				jQ(".overlay").fadeToggle(300);
				jQ(this).find('h3').addClass('open');
				//jQ(this).find('.main-category').css({'z-index': '999999'});
				var name = jQ(this).find('h3 span').text();    
				
				//name= htmlEscape(name);
				
				var values = jQ('input[name="'+jQ.trim(name)+'"]').val();        	
				var url = app.util.appendParamToURL("${URLUtils.http('Search-GetCategoryImage')}","catList", values);
				var _this = jQ(this);
				if (_this.find('.inner-wrapper').children('.sub-category').length <= 0){
					jQ.when( getajaxdata('lpad', url) ).then(function(response){
						var getHeight, pullDownHeight;					
            			var res = jQ("<div/>").append(response);
						res = jQ(res).find('.sub-category-wrapper');
						var dataLength = jQ(res).find('li').length;
						var data = jQ('<div/>').addClass('sub-category').css('visibility','hidden').append(res);
						_this.find('.inner-wrapper').append(data);
						//check first image from ajax downloaded or not : AJAX Hack
						// Sub category some times do not get height due to img downloading
						var firstImgSrc = jQ(res).find('li').find('img').attr('src');
						window.tempImg = jQ("<img />").attr({
							'src' : firstImgSrc,           
       					}).load(function() {
							if (!this.complete || typeof this.naturalWidth == "undefined" || this.naturalWidth == 0) {
								alert('broken image!');
							} else {
								getHeight = _this.height();
								//console.log("rows: " + jQ('.category-outside:eq(0)').find('.category').length)
								//console.log("height: " + _this.find('.sub-category-wrapper li:eq(0)').height())
								pullDownHeight = Math.ceil(dataLength / jQ('.category-outside:eq(0)').find('.category').length) * _this.find('.sub-category-wrapper li:eq(0)').height();
								if (_this.parents('.category-panel').children('.pull-down').length == 0){
									_this.find('.inner-wrapper .sub-category').css({'visibility':'hidden', 'display':'block'});
									var _div = jQ("<div/>").addClass('pull-down').css({ 'height': 0 }).insertAfter(_this.parent());
									//console.log(getHeight, pullDownHeight);
									_this.find('.sub-category').css({'top': getHeight});
									_div.animate({'height': pullDownHeight}, 300, function(){
										_this.find('.inner-wrapper .sub-category').css({'visibility':'visible'}).addClass('active');	
									});
								}
								_this.find(".sub-category ul li:nth-child(4n)").after("<li class='clear'></li>");
							}
							/*jQ('html, body').animate({
								scrollTop: getHeight
							}, 300);*/
						});
						delete tempImg;//memory clear
					})
				} else {
					jQ(this).find('ul').show();
					var pullDownHeight = _this.find('.sub-category-wrapper').height();
					//var pullDown = jQ('<div/>').attr('id','getHeight').append(_this.find('.sub-category-wrapper').clone().css({'visiblity':'hidden', 'display': 'none', 'position': 'absolute', 'top': '-999999px' }));
					//jQ('body').append(pullDown);
					//pullDownHeight = jQ('#getHeight').height();
					//pullDown.remove();
					if (jQ(this).children('.pull-down').length == 0){
						_this.find('.inner-wrapper .sub-category').hide();	
						var _div = jQ("<div/>").addClass('pull-down').css({ 'height': 0 }).insertAfter(jQ(this).parent()).animate({'height':pullDownHeight},300, function(){
							_this.find('.inner-wrapper .sub-category').show();
							_this.find('.inner-wrapper .sub-category').css({'visibility': 'visible'}).addClass('active');
							adjustPullDown();
							/*jQ('html, body').animate({
								scrollTop: jQ(window).scrollTop() + _this.find('.sub-category-wrapper li:eq(0)').height()
							}, 300);*/
						});
					}
				}
			}
		})
	});
	//-->
</script>