<isinclude template="tablet/util/modules"/>

<isset name="attributeName" value="${pdict.CurrentHttpParameterMap.fieldName}" scope="pdict"/>
<div id="UserCredentialDialog" class="creditcardform">
	<form id="UserCredentialForm" name="UserCredentialForm" action="${URLUtils.httpsContinue()}"  method="post">
		<fieldset>
			<isif condition="${pdict.attributeName == 'email'}">
				<div class="formfields change_email_section">
			<iselse>
				<div class="formfields change_email_section hide">	
			</isif>	
	   				<div class="formfield email">
						<isinputfield formfield="${pdict.CurrentForms.logincredential.loginChange.newemail}" type="input" xhtmlclass="emailnum" />
						<div class="clear"><!-- FOAT CLEAR --></div>
					</div>
					<div class="formfield confirmEmail">
						<isinputfield formfield="${pdict.CurrentForms.logincredential.loginChange.emailconfirm}" type="input" xhtmlclass="confirmemailnum CONFIRM_EMPTY"/>
						<div class="clear"><!-- FOAT CLEAR --></div>
					</div>
					<div class="formfield currentpassword passwordMsg">
						<isinputfield formfield="${pdict.CurrentForms.logincredential.loginChange.password}" type="password" xhtmlclass="passwordvalidation"/>
					</div>
					<div class="clear"><!-- FOAT CLEAR --></div>
			  </div>
			<isif condition="${pdict.attributeName == 'password'}">
				<div class="formfields email change_pswd_section">
			<iselse>
				<div class="formfields email change_pswd_section hide">	
			</isif>	
					<div class="formfield currentpassword passwordMsg">
						<isinputfield formfield="${pdict.CurrentForms.logincredential.loginChange.currentpassword}" type="password" xhtmlclass="passwordvalidation"/>
						<div class="clear"><!-- FOAT CLEAR --></div>
					</div>
					<div class="formfield newpassword passwordMsg">
						<isinputfield formfield="${pdict.CurrentForms.logincredential.loginChange.newpassword}" type="password" xhtmlclass="passwordvalidation newpswd"/>
						<div class="clear"><!-- FOAT CLEAR --></div>
					</div>
					<div class="formfield confirmpassword passwordMsg">
						<isinputfield formfield="${pdict.CurrentForms.logincredential.loginChange.passwordconfirm}" type="password" xhtmlclass="passwordvalidation confirmpswd CONFIRM_PWD_EMPTY"/>
					</div>
					<div class="clear"><!-- FOAT CLEAR --></div>
			</div>	
			<div class="separator">&nbsp;</div>
			<div class="button_wrapper_editemail">
					<div id="formaction"></div>			
					<div class="floatright btn-green-flat">
						<button id="applyBtn" type="button" value="${Resource.msg('global.confirm','locale',null)}"><span>${Resource.msg('global.confirm','locale',null)}</span><span class="arrow-btn">&nbsp;</span></button>	
					</div>
					<div class="floatleft btn-grey-flat cancelbtn">
						<button id="cancelBtn" type="button" value="${Resource.msg('global.cancel','locale',null)}" class="link_button"><span>${Resource.msg('global.cancel','locale',null)}</span></button>
						<div class="clear"><!-- FLOAT CLEAR --></div>
					</div>
					<div class="clear"><!-- FLOAT CLEAR --></div>	
			</div>
			<div class="clear"><!-- FLOAT CLEAR --></div>
			<input type="hidden" name="${pdict.CurrentForms.logincredential.loginChange.pageerror}" class="errorfield"/>
		</fieldset>
	</form>
</div><!-- END: UserCredentialForm -->

<div class="confirmationcontainer" id="confirmationcontaineremail" style="display:none;">
	<h2>${Resource.msg('editcredentials.emailchange','account',null)}</h2>	
		<div class="button_wrapper_editemail">
			<div class="floatright btn-green-flat">
				<button id="confirmBtnEmail" type="button"><span>${Resource.msg('global.close','locale',null)}</span></button>
			</div>
		</div>			
</div>
<div class="confirmationcontainer" id="confirmationcontainerpassword" style="display:none;">
	<h2>${Resource.msg('editcredentials.passwordchange','account',null)}</h2>	
		<div class="button_wrapper_editemail">
			<div class="floatright btn-green-flat">
				<button id="confirmBtn" type="button"><span>${Resource.msg('global.close','locale',null)}</span></button>
			</div>
		</div>			
</div>

<script type="text/javascript"><!--

	app.URLs.submitDialogURL = '${URLUtils.httpsContinue()}';
	app.URLs.changeUserLoginURL = "${URLUtils.https('Account-EditUserLogin')}";
	app.URLs.changeUserPasswordURL = "${URLUtils.https('Account-EditUserPassword')}";
	if(!jQuery('#dialogcontainer').dialog('isOpen'))
	{
		jQuery('#dialogcontainer').dialog({
			bgiframe: true,
			autoOpen: false,
			modal: true,
			overlay: {
	    		opacity: 0.5,
	     		background: "black"
			},
	    	height: "auto",
	    	width: 475,
	    	title: "Change Email",
	    	resizable: false
		});
 
		jQuery('#dialogcontainer').dialog('open');
		
		 /* for all dialogue boxes - set to center in both orientations - Shahzad */
	 	 var popupW = jQuery('#dialogcontainer').width();		 
	 	jQuery('#dialogcontainer').parent().css({ "marginLeft":-(popupW/2)+"px", "left":"50%" });
		 
		 
		 /* end */ 	
	}
	function isemailValid(value){
		return /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/.test(value);
	}
	jQuery(document).ready(function() {
				
		// execute unobtrusive js code
		app.execUjs();

		//QC Defect 828 | The focus is not transferred to submit button on click of Enter key. | Naveen Kumar
		jQuery('#UserCredentialForm').keypress( function(e) {			
			if(e.which == 13) {				
				jQuery('#applyBtn').click();
				return false;
			}
			return true;
		});
		
		if("${pdict.attributeName}" == "email") {
			$('.emailnum').addClass("required");
		 	$('.confirmemailnum').addClass("required");
		 	$('.change_email_section .passwordvalidation').addClass(" required");
		  	$('.change_email_section label').append('<span class="requiredindicator">*</span>');
		}else {
			$('.change_pswd_section .passwordvalidation').addClass(" required");
			$('.change_pswd_section label').append('<span class="requiredindicator">*</span>');
		}
		
		jQuery('#applyBtn').click( function() {
			var message = "${Resource.msg('global.missingval','locale',null)}";
			var validpassword = true;
			var validemail = true;
			if("${pdict.attributeName}" == "email") {
				var newEmail=jQuery(".change_email_section .emailnum").val();
				var confirmEmail=jQuery(".change_email_section .confirmemailnum").val();
				var password=jQuery(".change_email_section .passwordvalidation").val();
				if(newEmail == null || newEmail == "") {
					validemail = false;
					var emailInputField = $('.change_email_section .email .value');
					if(emailInputField == null || emailInputField.find('.errorIcon').attr('class') == undefined){
						var errorIconVar=$('<span class="errorIcon" />');
						var element = $('.change_email_section .email .emailnum');
						var elementId = element.attr('id');
						var label = message.replace("{0}",element.parents(".email").find(".labeltext").text().replace(/[:\*]/g,''));
						var errormessage = "<div class='errorclient' htmlfor='"+elementId+"' generated='true'>" + label +"</div>";
						element.parents(".genericinputbox").append(errorIconVar);
						element.parents(".genericinputbox").append(errormessage);
						element.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); 
						element.parents(".email").find(".labeltext").addClass("errorlabel"); 
						element.parents(".email").find(".errormessage").remove();
						element.addClass("errorclient");
					}
				}else {
					validemail = isemailValid(newEmail);
				}
				if(confirmEmail == null || confirmEmail == ""){
					var emailInputField = $('.change_email_section .confirmEmail .value');
					if(emailInputField == null || emailInputField.find('.errorIcon').attr('class') == undefined){
						var errorIconVar=$('<span class="errorIcon" />');
						var element = $('.change_email_section .confirmEmail .confirmemailnum');
						var elementId = element.attr('id');
						var label = message.replace("{0}",element.parents(".confirmEmail").find(".labeltext").text().replace(/[:\*]/g,''));
						var errormessage = "<div class='errorclient' htmlfor='"+elementId+"' generated='true'>" + label +"</div>";
						element.parents(".genericinputbox").append(errorIconVar);
						element.parents(".genericinputbox").append(errormessage);
						element.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
						element.parents(".confirmEmail").find(".labeltext").addClass("errorlabel"); /*Mark Label as red*/
						element.parents(".confirmEmail").find(".errormessage").remove();
						element.addClass("errorclient");
					}
				}
				if(newEmail != null && confirmEmail != null){
					if(newEmail != "" && confirmEmail != "") {
						var confirmEmailElement = $('.change_email_section .confirmEmail .confirmemailnum');
						if(newEmail != confirmEmail){
							var label = "${Resource.msg('billingaddress.confirmemail','forms',null)}";
							confirmEmailElement.parents(".genericinputbox").find(".successIcon").removeClass("successIcon").addClass("errorIcon");
							confirmEmailElement.parents(".genericinputbox").find(".errorclient").text(label);
							confirmEmailElement.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
							confirmEmailElement.parents(".confirmEmail").find(".labeltext").addClass("errorlabel"); /*Mark Label as red*/
							confirmEmailElement.parents(".confirmEmail").find(".errormessage").remove();
							confirmEmailElement.addClass("errorclient");
						}else {
							confirmEmailElement.parents(".genericinputbox").find(".errorclient").empty();
							confirmEmailElement.parents(".genericinputbox").find(".errorIcon").removeClass("errorIcon").addClass("successIcon");
							confirmEmailElement.prev(".errorinputbox_leftcurve").removeClass("errorinputbox_leftcurve").addClass("genericinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
							confirmEmailElement.parents(".confirmEmail").find(".errorlabel").removeClass("errorlabel"); /*Mark Label as red*/
							confirmEmailElement.parents(".confirmEmail").find(".errormessage").remove();
							confirmEmailElement.removeClass("errorclient");
						}
						
					}
					
				}
				if(password == null || password == ""){
					var emailInputField = $('.change_email_section .currentpassword .value');
					if(emailInputField == null || emailInputField.find('.errorIcon').attr('class') == undefined){
						var errorIconVar=$('<span class="errorIcon" />');
						var element = $('.change_email_section .currentpassword .passwordvalidation');
						var elementId = element.attr('id');
						var label = message.replace("{0}",element.parents(".currentpassword").find(".labeltext").text().replace(/[:\*]/g,''));
						var errormessage = "<div class='errorclient' htmlfor='"+elementId+"' generated='true'>" + label +"</div>";
						element.parents(".genericinputbox").append(errorIconVar);
						element.parents(".genericinputbox").append(errormessage);
						element.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
						element.parents(".currentpassword").find(".labeltext").addClass("errorlabel"); /*Mark Label as red*/
						element.parents(".currentpassword").find(".errormessage").remove();
						element.addClass("errorclient");
					}
				}
				if((validemail && newEmail != null && newEmail != "" && confirmEmail != null  && confirmEmail != "" && password != null && password != "" && newEmail == confirmEmail)) {
					jQuery.ajax({
					   type: "POST",
					   url: app.URLs.changeUserLoginURL,
					   data: {"newEmail": newEmail, "confirmEmail": confirmEmail, "password": password, "response": "" },
					   success: function(data){	 
		   					if(data == "Pass") 
		   					{
		   						jQuery(".registrationform .email .disabled_input").val(newEmail);
		   						jQuery('#confirmationcontaineremail').show();	
					   			jQuery('#confirmationcontaineremail').dialog({
						   			bgiframe: true,
									autoOpen: false,
									modal: true,
						    		height: 290,
									width: 475,
						    		resizable: false
								});
					    		jQuery('#confirmationcontaineremail').dialog('option', 'title', "${Resource.msg('dialog.confirmation.title','forms',null)}");	
								jQuery('#confirmationcontaineremail').dialog('open');
								 
								 /* for all dialogue boxes - set to center in both orientations - Shahzad */
								 var popupW = jQuery('#confirmationcontaineremail').width();	 
								 jQuery('#confirmationcontaineremail').parent().css({ "marginLeft":-(popupW/2)+"px", "left":"50%"});
							 
								 
								 /* end */ 
		   					}
		   					else
		   					{
			   					if(data == "InvalidUserName") {
			   						var element = $('.change_email_section .email .emailnum');
			   						element.parents(".genericinputbox").find(".successIcon").removeClass("successIcon");
			   						element.parents(".genericinputbox").find(".errorclient").empty().append("${Resource.msg('profile.usernametaken','forms',null)}");
		   							element.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
		   							element.parents(".email").find(".labeltext").addClass("errorlabel"); /*Mark Label as red*/
		   							element.parents(".email").find(".errormessage").remove();
		   							element.addClass("errorclient");
			   					}else if(data == "InvalidPassword"){
			   						var element = $('.change_email_section .currentpassword .passwordvalidation');
			   						element.parents(".genericinputbox").find(".successIcon").removeClass("successIcon");
			   						element.parents(".genericinputbox").find(".errorclient").empty().append("${Resource.msg('profile.wrongpassword','forms',null)}");
			   						element.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
		   							element.parents(".currentpassword").find(".labeltext").addClass("errorlabel"); /*Mark Label as red*/
		   							element.parents(".currentpassword").find(".errormessage").remove();
		   							element.addClass("errorclient");
			   					}else if(data == "InvalidConfirmEmail") {
			   						var element = $('.change_email_section .confirmEmail .confirmemailnum');
			   						element.parents(".genericinputbox").find(".successIcon").removeClass("successIcon");
			   						element.parents(".genericinputbox").find(".errorclient").empty().append("${Resource.msg('billingaddress.confirmemail','forms',null)}");
			   						element.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
		   							element.parents(".confirmEmail").find(".labeltext").addClass("errorlabel"); /*Mark Label as red*/
		   							element.parents(".confirmEmail").find(".errormessage").remove();
		   							element.addClass("errorclient");
			   					}else if(data == "EmptyNewEmail"){
			   						var element = $('.change_email_section .email .emailnum');
			   						element.parents(".genericinputbox").find(".successIcon").removeClass("successIcon");
			   						message = message.replace("{0}",jQuery('.change_email_section .email').find(".labeltext").text().replace(/[:\*]/g,''));
			   						element.parents(".genericinputbox").find(".errorclient").empty().append(message);
			   						element.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
		   							element.parents(".email").find(".labeltext").addClass("errorlabel"); /*Mark Label as red*/
		   							element.parents(".email").find(".errormessage").remove();
		   							element.addClass("errorclient");
			   					}
		   					}
					   },
					   failure: function(data) {
					   		alert("${Resource.msg('global.serverconnection','locale',null)}");		
					   }
					});
				}
			}
			else {
				var currentpassword=jQuery(".change_pswd_section .passwordvalidation").val();
				var newpassword=jQuery(".change_pswd_section .newpswd").val();
				var confirmpassword=jQuery(".change_pswd_section .confirmpswd").val();
				if(currentpassword == null || currentpassword == "" || currentpassword.length < 5) {
					validpassword = false;
					var emailInputField = $('.change_pswd_section .currentpassword .value');
					
					if(emailInputField == null || emailInputField.find('.errorIcon').attr('class') == undefined){
						var errorIconVar=$('<span class="errorIcon" />');
						var element = $('.change_pswd_section .currentpassword .passwordvalidation');
						var elementId = element.attr('id');
						var label = message.replace("{0}",element.parents(".currentpassword").find(".labeltext").text().replace(/[:\*]/g,''));
						var errormessage = "<div class='errorclient' htmlfor='"+elementId+"' generated='true'>" + label +"</div>";
						element.parents(".genericinputbox").append(errorIconVar);
						element.parents(".genericinputbox").append(errormessage);
						element.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
						element.parents(".currentpassword").find(".labeltext").addClass("errorlabel"); /*Mark Label as red*/
						element.parents(".currentpassword").find(".errormessage").remove();
						element.addClass("errorclient");
					}
				}
				if(newpassword == null || newpassword == "" || newpassword.length < 5){
					validpassword = false;
					var emailInputField = $('.change_pswd_section .newpassword .value');
					if(emailInputField == null || emailInputField.find('.errorIcon').attr('class') == undefined){
						var errorIconVar=$('<span class="errorIcon" />');
						var element = $('.change_pswd_section .newpassword .newpswd');
						var elementId = element.attr('id');
						var label = message.replace("{0}",element.parents(".newpassword").find(".labeltext").text().replace(/[:\*]/g,''));
						var errormessage = "<div class='errorclient' htmlfor='"+elementId+"' generated='true'>" + label +"</div>";
						element.parents(".genericinputbox").append(errorIconVar);
						element.parents(".genericinputbox").append(errormessage);
						element.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
						element.parents(".newpassword").find(".labeltext").addClass("errorlabel"); /*Mark Label as red*/
						element.parents(".newpassword").find(".errormessage").remove();
						element.addClass("errorclient");
					}
				}
				if(confirmpassword == null || confirmpassword == "" || confirmpassword.length < 5){
					validpassword = false;
					var emailInputField = $('.change_pswd_section .confirmpassword .value');
					if(emailInputField == null || emailInputField.find('.errorIcon').attr('class') == undefined){
						var errorIconVar=$('<span class="errorIcon" />');
						var element = $('.change_pswd_section .confirmpassword .confirmpswd');
						var elementId = element.attr('id');
						var label = message.replace("{0}",element.parents(".confirmpassword").find(".labeltext").text().replace(/[:\*]/g,''));
						var errormessage = "<div class='errorclient' htmlfor='"+elementId+"' generated='true'>" + label +"</div>";
						element.parents(".genericinputbox").append(errorIconVar);
						element.parents(".genericinputbox").append(errormessage);
						element.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
						element.parents(".confirmpassword").find(".labeltext").addClass("errorlabel"); /*Mark Label as red*/
						element.parents(".confirmpassword").find(".errormessage").remove();
						element.addClass("errorclient");
					}
				}
				if(newpassword != null && confirmpassword != null && newpassword.length > 5 && confirmpassword.length > 5){
					if(newpassword != "" && confirmpassword != "") {
						var confirmPwdElement = $('.change_pswd_section .confirmpassword .confirmpswd');
						var newPwdElement = $('.change_pswd_section .newpassword .newpswd');
						if(newpassword != confirmpassword){
							var label = "${Resource.msg('account.passworderror','account',null)}";
							confirmPwdElement.parents(".genericinputbox").find(".successIcon").removeClass("successIcon").addClass("errorIcon");
							confirmPwdElement.parents(".genericinputbox").find(".errorclient").text(label);
							confirmPwdElement.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
							confirmPwdElement.parents(".confirmpassword").find(".labeltext").addClass("errorlabel"); /*Mark Label as red*/
							confirmPwdElement.parents(".confirmpassword").find(".errormessage").remove();
							confirmPwdElement.addClass("errorclient");
						}else {
							confirmPwdElement.parents(".genericinputbox").find(".errorclient").empty();
							confirmPwdElement.parents(".genericinputbox").find(".errorIcon").removeClass("errorIcon").addClass("successIcon");
							confirmPwdElement.prev(".errorinputbox_leftcurve").removeClass("errorinputbox_leftcurve").addClass("genericinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
							confirmPwdElement.parents(".confirmpassword").find(".errorlabel").removeClass("errorlabel"); /*Mark Label as red*/
							confirmPwdElement.parents(".confirmpassword").find(".errormessage").remove();
							confirmPwdElement.removeClass("errorclient");
						}
						
					}
					
				}
				if((validpassword && currentpassword != null && currentpassword != "" && newpassword != null  && newpassword != "" && confirmpassword != null && confirmpassword != "" && newpassword == confirmpassword)) {

					jQuery.ajax({
					   type: "POST",
					   url: app.URLs.changeUserPasswordURL,
					   data: {"newpassword": newpassword, "confirmpassword": confirmpassword, "currentpassword": currentpassword},
					   success: function(data){	 
		   					if(data == "Pass") 
	   						{
		   						jQuery('#confirmationcontainerpassword').show();	
		   				   		jQuery('#confirmationcontainerpassword').dialog({
		   					   		bgiframe: true,
		   							autoOpen: false,
		   							modal: true,
		   					    	height: 290,
		   							width: 500,//Praveen: Fix for QC defect 931
		   					    	resizable: false
		   						});
		   				    	jQuery('#confirmationcontainerpassword').dialog('option', 'title', "${Resource.msg('dialog.confirmation.title','forms',null)}");	
		   						jQuery('#confirmationcontainerpassword').dialog('open');
		   						jQuery('.ui-dialog :select').blur();
		   						/* for all dialogue boxes - set to center in both orientations - Shahzad */
								 var popupW = jQuery('#confirmationcontainerpassword').width();	 
								 jQuery('#confirmationcontainerpassword').parent().css({ "marginLeft":-(popupW/2)+"px", "left":"50%"});
								  
								 /* end */ 
	   						}
		   					else
		   					{
		   						if(data == "InvalidCurrentPassword") {
		   							var element = $('.change_pswd_section .currentpassword .passwordvalidation');
			   						element.parents(".genericinputbox").find(".successIcon").removeClass("successIcon");
			   						element.parents(".genericinputbox").find(".errorclient").empty().append("${Resource.msg('profile.wrongpassword','forms',null)}");
		   							element.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
		   							element.parents(".currentpassword").find(".labeltext").addClass("errorlabel"); /*Mark Label as red*/
		   							element.parents(".currentpassword").find(".errormessage").remove();
		   							element.addClass("errorclient");
			   					}else if(data == "EmptyCurrentPassword"){
			   						var element = $('.change_pswd_section .currentpassword .passwordvalidation');
			   						element.parents(".genericinputbox").find(".successIcon").removeClass("successIcon");
			   						message = message.replace("{0}",jQuery('.change_pswd_section .currentpassword').find(".labeltext").text().replace(/[:\*]/g,''));
			   						element.parents(".genericinputbox").find(".errorclient").empty().append(message);
			   						element.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
		   							element.parents(".currentpassword").find(".labeltext").addClass("errorlabel"); /*Mark Label as red*/
		   							element.parents(".currentpassword").find(".errormessage").remove();
		   							element.addClass("errorclient");
			   					}else if(data == "MismatchConfirmPassword"){
			   						var element = $('.change_pswd_section .confirmpassword .confirmpswd');
			   						element.parents(".genericinputbox").find(".successIcon").removeClass("successIcon");
			   						element.parents(".genericinputbox").find(".errorclient").empty().append("${Resource.msg('account.passworderror','account',null)}");
			   						element.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
		   							element.parents(".confirmpassword").find(".labeltext").addClass("errorlabel"); /*Mark Label as red*/
		   							element.parents(".confirmpassword").find(".errormessage").remove();
		   							element.addClass("errorclient");
			   					}else if(data == "EmptyNewPassword"){
			   						var element = $('.change_pswd_section .newpassword .newpswd');
			   						element.parents(".genericinputbox").find(".successIcon").removeClass("successIcon");
			   						message = message.replace("{0}",jQuery('.change_pswd_section .newpassword').find(".labeltext").text().replace(/[:\*]/g,''));
			   						element.parents(".genericinputbox").find(".errorclient").empty().append(message);
			   						element.prev(".genericinputbox_leftcurve").removeClass("genericinputbox_leftcurve").addClass("errorinputbox_leftcurve"); /*changes the left curve for textbox in red color*/
		   							element.parents(".newpassword").find(".labeltext").addClass("errorlabel"); /*Mark Label as red*/
		   							element.parents(".newpassword").find(".errormessage").remove();
		   							element.addClass("errorclient");
			   					}
		   					}		
					   },
					   failure: function(data) {
					   		alert("${Resource.msg('global.serverconnection','locale',null)}");		
					   }
					});
				}
			}
	});

	jQuery('#confirmBtn').unbind("click").click( function() {
        jQuery('.confirmationcontainer').dialog('close');
        jQuery('#dialogcontainer').dialog('close');      
  	}); 

	jQuery('#confirmBtnEmail').unbind("click").click( function() {
        jQuery('.confirmationcontainer').dialog('close');
        jQuery('#dialogcontainer').dialog('close');      
  	}); 

	jQuery('#confirmationcontaineremail').bind('dialogclose', function(event, ui) {
		jQuery('#dialogcontainer').dialog('close'); 
	});

	jQuery('#confirmationcontainerpassword').bind('dialogclose', function(event, ui) {
		jQuery('#dialogcontainer').dialog('close'); 
	});
	
	jQuery('#cancelBtn').click( function() {
		jQuery('#dialogcontainer').dialog('close');
	});
});
	
//--></script>
