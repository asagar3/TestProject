<iscomment>
	This template renders a product in the search result using a ProductSearchHit object.
</iscomment>

<isif condition="${!empty(ProductHit) && !empty(ProductHit.product)}">
	<iscomment>Set the product of the product search hit locally for reuse</iscomment>
	<isset name="Product" value="${ProductHit.product}" scope="page"/>

	<iscomment>
		Get the colors selectable from the current product master or variant range if we
		need to determine them based on a search result.
	</iscomment>
	<isscript>
		var selectableColors : dw.util.Collection = new dw.util.ArrayList();
		var varAttrColor : dw.catalog.ProductVariationAttribute = null;
		
		if( Product.master )
		{
			var varModel : dw.catalog.ProductVariationModel = Product.variationModel;
			varAttrColor = varModel.getProductVariationAttribute("color");
	
			if( varAttrColor != null )
			{
				selectableColors = ProductHit.getRepresentedVariationValues( varAttrColor );
			}
		}
	</isscript>
	
    <iscomment>
		Generate link to product detail page: by default it's just the product of the product search hit.
		If a color variation is available, the first color is used as link URL.
	</iscomment>
	<isset name="productUrl" value="${URLUtils.http('Product-Show', 'pid', Product.ID)}" scope="page"/>
	<isif condition="${!empty(selectableColors) && selectableColors.size() > 0 && !empty(varAttrColor)}">
		<isset name="productUrl" value="${Product.variationModel.url('Product-Show', varAttrColor, selectableColors.get(0))}" scope="page"/>
	</isif>

    <iscomment>append the paging parameters to the product URL</iscomment>
	<isset name="productUrl" value="${productUrl.append('start', starting)}" scope="page"/>

	<iscomment>append the search query parameters to the product URL</iscomment>
	<isif condition="${!empty(pdict.ProductSearchResult)}">
		<isset name="productUrl" value="${pdict.ProductSearchResult.url( productUrl )}" scope="page"/>
	</isif>
	<iscomment><!-- Added class ms_text_2 --></iscomment>
	
	<isset name="scene7ImageForSearchBar" value="" scope="page"/>
	<isset name="scene7ImageType" value="" scope="page"/>
	<isloop items="${dw.system.Site.getCurrent().preferences.custom.ImageTypesDimension}" alias="ImageTypeDimensionObj">	
		<isscript>if (ImageTypeDimensionObj.getValue() == 'carousel') {
				scene7ImageForSearchBar = ImageTypeDimensionObj.getDisplayValue();
				scene7ImageType = ImageTypeDimensionObj.getValue();
				scene7ImageTypeDimension = ImageTypeDimensionObj.getDisplayValue();
				}
		</isscript>													
	</isloop>
	<isif condition="${null == pdict.CurrentHttpParameterMap.q.value && empty(pdict.CurrentHttpParameterMap.q.value)}">
		<isinclude template="product/imageTypeDimension" />
	</isif>
	
	
	<div class="product producttile ${scene7ImageType.toLowerCase()} tab-land"><!-- dwMarker="product" dwContentID="${Product.UUID}" -->
		<isobject object="${ProductHit}" view="searchhit">
			<div class="inner-wrapper">
			<div class="image">
			 
				<iscomment>Render the thumbnail</iscomment>
				<div class="thumbnail">
					
					<iscomment>Determine the correct image, either first displayed color variation or default product thumbnail</iscomment>
					<iscomment>Praveen | Bug fix for INC000006095118</iscomment>
					<isset name="variationSelected" value="${pdict.CurrentHttpParameterMap.getParameterMap('prefn1')}" scope ="page"/>
						<isif condition="${!empty(variationSelected)}">
							<isif condition="${!empty(selectableColors) && selectableColors.size() > 0}">
								<isset name="firstColorVariation" value="${selectableColors.get(0)}" scope="page"/>
								<isset name="image" value="${firstColorVariation.getImage('catlanding')}" scope="page"/>
							<iselse/>
								<isset name="image" value="${Product.getImage('catlanding',0)}" scope="page"/>
							</isif>
						<iselse>
							<isset name="image" value="${Product.getImage('catlanding',0)}" scope="page"/>
						</isif>
						
					
					
					<iscomment>If image couldn't be determined, display a "no image" medium</iscomment>
					<isif condition="${!empty(image)}">
						<isset name="thumbnailUrl" value="${image.URL}" scope="page"/>
						<isset name="thumbnailAlt" value="${image.alt}" scope="page"/>
						<isset name="thumbnailTitle" value="${image.title}" scope="page"/>
					<iselse/>
						<isset name="thumbnailUrl" value="${URLUtils.staticURL('/images/noimagemedium.png')}" scope="page"/>
						<isset name="thumbnailAlt" value="${Product.name}" scope="page"/>
						<isset name="thumbnailTitle" value="${Product.name}" scope="page"/>
					</isif>
					<p class="productimage">
						
						<isif condition="${pdict.CurrentHttpParameterMap.q.value != null && !empty(pdict.CurrentHttpParameterMap.q.value)}">
							<isscript>var scene7ImageUrl : String = thumbnailUrl + scene7ImageForSearchBar;</isscript>
						<iselse>
							<isscript>var scene7ImageUrl : String = thumbnailUrl + scene7ImageTypeDimension ;</isscript>
						</isif>
						
						<a href="${productUrl}" title="${Product.name}"><img src="${scene7ImageUrl}" alt="${thumbnailAlt}" title="${thumbnailTitle}" /></a>
					</p>
				</div>
				<iscomment>do not display the QuickView button if the product is a product set</iscomment>
				<iscomment>
				Davinder Kumar removing quickview for tablet site
				<isif condition="${!Product.productSet && dw.system.Site.current.preferences.custom.showQuickView}">
					<div class="quickviewbutton">
						<a href="${productUrl}" title="${Product.name}">${Resource.msg('product.quickview','product',null)}</a>
					</div><!-- END: quickviewbutton -->
				</isif>
				</iscomment>
						
			
	
				<iscomment>Render information on active product promotions</iscomment>
				<isset name="promos" value="${dw.campaign.PromotionMgr.activeCustomerPromotions.getProductPromotions(Product)}" scope="page"/>
				<isif condition="${!empty(promos)}">
					<div class="promo-carousel">
					<isloop items="${promos}" var="promo">
						<div class="promotionalMessage">
							<isprint value="${promo.calloutMsg}" encoding="off"/>
						</div>
					</isloop>
					</div>
				</isif>
	
			<!-- END: promo -->
				
				
				
			</div><!-- END: image -->
			
			<iscomment><!-- Adam's edit - INT494 --></iscomment>
			<isif condition="${Product.custom.productBrand != null && !empty(Product.custom.productBrand)}">
			<div class="brandName">
				<isprint value="${Product.custom.productBrand}"/>
			</div>
			</isif>
			<div class="name">
				<a href="${productUrl}" title="${Product.name}">
					<isprint value="${Product.name.replace(Product.custom.productBrand, '')}"/>
				</a>
			</div><!-- END: name -->
			
				<div class="pricing">
	
		 <iscomment>Renders pricing information depending on the option or variation model, as well as scaled prices and so on.</iscomment>
				<div class="price">
					<isif condition="${Product.productSet}">
						<iscomment>Product set pricing</iscomment>
						<isif condition="${Product.custom.productSetPriceIndicator != null }">
							
							<iscomment>INT-450 - PIM - New product set indicators - new logic for indicator 3</iscomment>
							<isif condition="${Product.custom.productSetPriceIndicator == '3'}">
								<div class="salesprice"><isprint value="${Product.getPriceModel().getMinPrice()}"/></div>
							<iselseif condition="${Product.custom.productSetPriceIndicator == '2'}">
								<iscomment><div class="salesprice"><isprint value="${Product.custom.productSetPrice}"/></div></iscomment>
								<iscomment>INT-448 - PIM calculate product set price for suits only</iscomment>
								<isscript>
									importScript("app_mns:/product/ProductSetPriceCalculation.ds");
									var finalPrice:Money=getMinSumPriceForProductSet(Product);
								</isscript>
								<div class="salesprice"><isprint value="${finalPrice}"/></div>
							</isif>
						<iselse>	
							<div class="productsetprice">${Resource.msg('global.buyall','locale',null)}</div>
						</isif>
					<iselseif condition="${Product.master && ProductHit.priceRange}"/>
						<iscomment>Praveen: Code changes for CR3007</iscomment>
						<isscript>
							// var masterProd : dw.catalog.Product = Product.getMasterProduct();
						</isscript>
						<isset name="minListPrice" value="${Product.priceModel.getMinPriceBookPrice(dw.system.Site.current.preferences.custom.listPriceDefault)}" scope="page"/>
						<isset name="maxListPrice" value="${Product.priceModel.getMaxPriceBookPrice(dw.system.Site.current.preferences.custom.listPriceDefault)}" scope="page"/>
						<iscomment>Praveen: Code changes for CR3007</iscomment>
						
						<iscomment>Product master price range depending on the represented variants</iscomment>
							<iscomment>Praveen: Code change for displaying the list price</iscomment>
							
							<isif condition="${!ProductHit.minPrice.equals(minListPrice)}">
								<div class="discountprice">
							</isif>
							<div class="salesprice"><div class="accessibility">${Resource.msg('product.nowPrice','product',null)}</div> <isprint value="${ProductHit.minPrice}"/> - <isprint value="${ProductHit.maxPrice}"/></div>
							<div class="standardprice"><div class="accessibility">${Resource.msg('product.wasPrice','product',null)}</div>
								<iscomment>Praveen: If list price is common for all variants</iscomment>
								<isif condition="${minListPrice.equals(maxListPrice) && !minListPrice.equals(ProductHit.minPrice)}">
									<isprint value="${minListPrice}"/>
								<iscomment>Praveen: If list price is in range</iscomment>
								<iselseif condition="${!minListPrice.equals(maxListPrice) && !minListPrice.equals(ProductHit.minPrice)}">
									<isprint value="${minListPrice}"/>-<isprint value="${maxListPrice}"/>
								</isif>						
							</div>
							<isif condition="${!ProductHit.minPrice.equals(minListPrice)}">
								</div>
							</isif>
							
					<iselse/>						
						<iscomment>For Product master without a price range get the pricing from firstRepresentedProduct </iscomment>
						<isif condition="${Product.master && !ProductHit.priceRange}"/>
							<iscomment>Preserve current product instance</iscomment>
							<isset name="OrgProduct" value="${Product}" scope="page"/>
							<isset name="Product" value="${ProductHit.firstRepresentedProduct}" scope="page"/>
						</isif>
						<iscomment>
							Regular pricing through price model of the product. If the product is an option product,
							we have to initialize the product price model with the option model.
						</iscomment>
						<isif condition="${Product.optionProduct}">
							<isset name="PriceModel" value="${Product.getPriceModel(Product.getOptionModel())}" scope="page"/>
						<iselse/>
							<isset name="PriceModel" value="${Product.getPriceModel()}" scope="page"/>
						</isif>
	
						<iscomment>
							Check whether the product has price in the sale pricebook. If so, then
							display two prices: crossed-out standard price and sales price.
						</iscomment>
						<isinclude template="product/components/standardprice"/>
						<isset name="SalesPrice" value="${PriceModel.getPrice()}" scope="page"/>
						<isset name="ShowStandardPrice" value="${StandardPrice.available && SalesPrice.available && StandardPrice.compareTo(SalesPrice) == 1}" scope="page"/>
						
						<iscomment>Praveen: Code changes for CR3007</iscomment>
						<isscript>
							/* var masterProd : dw.catalog.Product = null;
							//If for Abandon products & else for all other products
							if(!Product.isMaster() && !Product.isVariant()){
								var masterProd = Product;
							}else{
								var masterProd = Product.getMasterProduct();
							}
						*/
							var masterProd : dw.catalog.Product = null;
	//If for Abandon products & else for all other products
	if(!Product.isMaster() && !Product.isVariant()){
	var masterProd = Product;
 	}
	else if (Product.isVariant())
  {
  var productVariant : dw.catalog.Variant = Product;
  var masterProd = productVariant.getMasterProduct();
  }
	else
  {
    var masterProd = Product;
  }
						
						</isscript>
						<isset name="minListPrice" value="${masterProd.priceModel.getMinPriceBookPrice(dw.system.Site.current.preferences.custom.listPriceDefault)}" scope="page"/>
						<isset name="maxListPrice" value="${masterProd.priceModel.getMaxPriceBookPrice(dw.system.Site.current.preferences.custom.listPriceDefault)}" scope="page"/>
	
						<isif condition="${!minListPrice.equals(SalesPrice) || !maxListPrice.equals(SalesPrice)}">
							<div class="discountprice">
								<div class="salesprice"><div class="accessibility">${Resource.msg('product.nowPrice','product',null)}</div> <isprint value="${SalesPrice}"/></div>
								<div class="standardprice"><div class="accessibility">${Resource.msg('product.wasPrice','product',null)}</div> 
									<isif condition="${!minListPrice.equals(maxListPrice)}">
										<isprint value="${minListPrice}"/>-<isprint value="${maxListPrice}"/>
									<iselse>
										<isprint value="${minListPrice}"/>
									</isif>
								</div>
							</div>
						<iselse/>
							<div class="salesprice"><isprint value="${SalesPrice}"/></div>
						</isif>
						<isif condition="${!empty(pdict.OrgProduct)}">
							<iscomment>Restore current product instance</iscomment>
							<isset name="Product" value="${OrgProduct}" scope="page"/>
							<isset name="OrgProduct" value="${null}" scope="page"/>
						</isif>
					</isif>
				</div>
				 
				<iscomment><!-- shahzad | Moved status aligned to price --></iscomment>
			<isif condition="${dw.system.Site.getCurrent().getCustomPreferenceValue("storeLiveDate")!=null}">
				<isset name="storeLiveDate" value="${dw.system.Site.getCurrent().getCustomPreferenceValue("storeLiveDate")}" scope="page"/>
			</isif>
			<isif condition="${storeLiveDate != null && ((new Date()-storeLiveDate.valueOf())/(24*60*60*1000))>28}">
				<isif condition="${Product.onlineFrom != null}">
					<isif condition="${((new Date()-Product.onlineFrom.valueOf())/(24*60*60*1000))<28}">
						<div class="status ms_text_2">
							${Resource.msg('product.new','product',null)}
						</div>	
					</isif>
				</isif>	
			</isif>
	
			</div><!-- END: pricing -->
			
			
			<div class="swatches clearfix">
	 		<iscomment>
					Render the color swatch secion for a product search hit. The swatches depend on the products the search hit actually represents.
					Doesn't necessarily equal all variants of a product master, since only a sub set of variants could be represented by the search
					hit (a variant group). We show color swatches only for variant groups represented by a product search hit.
				</iscomment>
				<isif condition="${!empty(selectableColors) && selectableColors.size() > 1 && !empty(varAttrColor)}">
	
					<iscomment>render a link to the palette and hide the actual palette if there are more than five colors contained</iscomment>
					<isif condition="${selectableColors.size() > 3}">
						<a href="javascript:;" class="productswatchesall">${Resource.msg('productresultarea.viewallcolors','search',null)}</a>
						<div class="swatchWrapper">
						<isloop items="${selectableColors}" var="colorValue" status="varloop">
								<isif condition="${varloop.count > 3}">
									<isbreak/>
								</isif>
								<iscomment>Determine the swatch and the thumbnail for this color</iscomment>
								<isset name="colorSwatch" value="${colorValue.getImage('swatch')}" scope="page"/>
								<isset name="colorThumbnail" value="${colorValue.getImage('catlanding')}" scope="page"/>
	
								<iscomment>If images couldn't be determined, display a "no image" thumbnail</iscomment>
								<isif condition="${!empty(colorSwatch)}">
									<isset name="swatchUrl" value="${colorSwatch.URL}" scope="page"/>
									<isset name="swatchAlt" value="${colorSwatch.alt}" scope="page"/>
									<isset name="swatchTitle" value="${colorSwatch.title}" scope="page"/>
								<iselse/>
									<isset name="swatchUrl" value="${URLUtils.staticURL('/images/noimagesmall.png')}" scope="page"/>
									<isset name="swatchAlt" value="${colorValue.displayValue}" scope="page"/>
									<isset name="swatchTitle" value="${colorValue.displayValue}" scope="page"/>
								</isif>
								<isif condition="${!empty(colorThumbnail)}">
									<isset name="thumbnailUrl" value="${colorThumbnail.URL}" scope="page"/>
									<isset name="thumbnailAlt" value="${colorThumbnail.alt}" scope="page"/>
									<isset name="thumbnailTitle" value="${colorThumbnail.title}" scope="page"/>
								<iselse/>
									<isset name="thumbnailUrl" value="${URLUtils.staticURL('/images/noimagesmall.png')}" scope="page"/>
									<isset name="thumbnailAlt" value="${colorValue.displayValue}" scope="page"/>
									<isset name="thumbnailTitle" value="${colorValue.displayValue}" scope="page"/>
								</isif>
								
								<iscomment>build the proper URL and append the search query parameters</iscomment>
							    <isset name="swatchproductUrl" value="${Product.variationModel.url('Product-Show', varAttrColor, colorValue.value).append('start', starting)}" scope="page"/>
							    <isif condition="${!empty(pdict.ProductSearchResult)}">
								    <isset name="swatchproductUrl" value="${pdict.ProductSearchResult.url( swatchproductUrl )}" scope="page"/>
							    </isif>
	
								<iscomment>render a single swatch, the url to the proper product detail page is contained in the href of the swatch link</iscomment>
								<a class="swatch <isif condition="${varloop.first}">selected</isif>" title="<isprint value="${colorValue.displayValue}"/>" href="${swatchproductUrl}">
									<isscript>
									var swatchwidth : Integer = dw.system.Site.getCurrent().preferences.custom.ImageWidthCatLandingSwatch;
									var swatchheight : Integer = dw.system.Site.getCurrent().preferences.custom.ImageHeightCatLandingSwatch;
									var scene7ImageUrl : String = swatchUrl + '?' + dw.system.Site.getCurrent().preferences.custom.s7Preset + 'wid='+swatchwidth+'&hei='+swatchheight;
									</isscript>
									<img class="swatchimage" src="${scene7ImageUrl}" alt="${swatchAlt}" title="${swatchTitle}"/>
									<isinclude template="product/imageTypeDimension" />
									<isscript>var scene7ImageUrl : String = thumbnailUrl + ImageTypeDimensionString;</isscript>
									<img class="swatchimage hiddenthumbnail" src="${scene7ImageUrl}" alt="${thumbnailAlt}" title="${thumbnailTitle}"/>
								</a>
							</isloop>
							</div>
						
					</isif>
	
					<iscomment>render the palette, the first swatch is always preselected</iscomment>
					
					<div class="palette<isif condition="${selectableColors.size() > 3}"> invisible" style="display: none;</isif>">
						<div class="innerpalette">
							<isif condition="${selectableColors.size() > 3}"><a href="javascript:;" class="productswatchesall_hide" id="productswatchesall_hide">${Resource.msg('productresultarea.viewallcolors','search',null)}</a></isif>
							<div class="swatchWrapper">
							<isloop items="${selectableColors}" var="colorValue" status="varloop">
	
								<iscomment>Determine the swatch and the thumbnail for this color</iscomment>
								<isset name="colorSwatch" value="${colorValue.getImage('swatch')}" scope="page"/>
								<isset name="colorThumbnail" value="${colorValue.getImage('catlanding')}" scope="page"/>
	
								<iscomment>If images couldn't be determined, display a "no image" thumbnail</iscomment>
								<isif condition="${!empty(colorSwatch)}">
									<isset name="swatchUrl" value="${colorSwatch.URL}" scope="page"/>
									<isset name="swatchAlt" value="${colorSwatch.alt}" scope="page"/>
									<isset name="swatchTitle" value="${colorSwatch.title}" scope="page"/>
								<iselse/>
									<isset name="swatchUrl" value="${URLUtils.staticURL('/images/noimagesmall.png')}" scope="page"/>
									<isset name="swatchAlt" value="${colorValue.displayValue}" scope="page"/>
									<isset name="swatchTitle" value="${colorValue.displayValue}" scope="page"/>
								</isif>
								<isif condition="${!empty(colorThumbnail)}">
									<isset name="thumbnailUrl" value="${colorThumbnail.URL}" scope="page"/>
									<isset name="thumbnailAlt" value="${colorThumbnail.alt}" scope="page"/>
									<isset name="thumbnailTitle" value="${colorThumbnail.title}" scope="page"/>
								<iselse/>
									<isset name="thumbnailUrl" value="${URLUtils.staticURL('/images/noimagesmall.png')}" scope="page"/>
									<isset name="thumbnailAlt" value="${colorValue.displayValue}" scope="page"/>
									<isset name="thumbnailTitle" value="${colorValue.displayValue}" scope="page"/>
								</isif>
								
								<iscomment>build the proper URL and append the search query parameters</iscomment>
							    <isset name="swatchproductUrl" value="${Product.variationModel.url('Product-Show', varAttrColor, colorValue.value).append('start', starting)}" scope="page"/>
							    <isif condition="${!empty(pdict.ProductSearchResult)}">
								    <isset name="swatchproductUrl" value="${pdict.ProductSearchResult.url( swatchproductUrl )}" scope="page"/>
							    </isif>
	
								<iscomment>render a single swatch, the url to the proper product detail page is contained in the href of the swatch link</iscomment>
								<a class="swatch <isif condition="${varloop.first}">selected</isif>" title="<isprint value="${colorValue.displayValue}"/>" href="${swatchproductUrl}">
									<isscript>
									var swatchwidth : Integer = dw.system.Site.getCurrent().preferences.custom.ImageWidthCatLandingSwatch;
									var swatchheight : Integer = dw.system.Site.getCurrent().preferences.custom.ImageHeightCatLandingSwatch;
									var scene7ImageUrl : String = swatchUrl + '?' + dw.system.Site.getCurrent().preferences.custom.s7Preset + 'wid='+swatchwidth+'&hei='+swatchheight;
									</isscript>
									<img class="swatchimage" src="${scene7ImageUrl}" alt="${swatchAlt}" title="${swatchTitle}"/>
									<isinclude template="product/imageTypeDimension" />
									<isif condition="${pdict.CurrentHttpParameterMap.q.value != null && !empty(pdict.CurrentHttpParameterMap.q.value)}">
										<isscript>var scene7ImageUrl : String = thumbnailUrl + scene7ImageForSearchBar;</isscript>
									<iselse>
										<isscript>var scene7ImageUrl : String = thumbnailUrl + ImageTypeDimensionString;</isscript>
									</isif>
									
									<img class="swatchimage hiddenthumbnail" src="${scene7ImageUrl}" alt="${thumbnailAlt}" title="${thumbnailTitle}"/>
								</a>
	
							</isloop>
							</div>
							<div class="clear"><!-- FLOAT CLEAR --></div>
						</div>
					</div>
					
					
				</isif>
	
			</div><!-- END:  -->
 
	     

			<iscomment><div class="review">
				<script type="text/javascript"><!--
					var pr_page_id = "${Product.ID}";
					var pr_zip_location="/example";
	
					var pr_write_review = "${URLUtils.http('PowerReviews-WriteReview')}?pid=${Product.ID}";
					var pr_read_review = "${URLUtils.http('Product-Show')}?pid=${Product.ID}#prReview";
	
					var pr_style_sheet = null;
	
					if(typeof(snippet) != "undefined") {
						snippet(document);
					}
				//--></script>
				
	
	        </div><!-- END: review --></iscomment>
	
			<iscomment>
				Render the compare checkbox, if search result is based on a category context.
				The checkbox is displayed if either the category or one of its parent categories
				has the custom attribute "enableCompare" set to true.
			</iscomment>
			<isscript>
				var cat 			= pdict.ProductSearchResult.category,
					enableCompare 	= false;
				
				while (cat != null) {
					if ('enableCompare' in cat.custom && cat.custom.enableCompare) {
						enableCompare = true;
						break;
					}
					cat = cat.parent;
				}
			</isscript>
	        <isif condition="${!empty(pdict.ProductSearchResult) && !empty(pdict.ProductSearchResult.category) && enableCompare}">
		        <div class="compare">
					<isif condition="${!Product.productSet && !Product.bundle}">
						<isscript>
							// mark the compare checkbox checked if the current product is 
							// in the current comparison list for the current category
							
							importScript( "app_mns:catalog/libCompareList.ds" );
							importScript( "app_mns:common/libJson.ds" );

							var comparison = GetProductCompareList();
							// Set the category
							comparison.setCategory(pdict.ProductSearchResult.category.ID);
	
							var comparisonProducts = null;
							
							if (comparison) {
								comparisonProducts = comparison.getProducts();
							}
							
							var checkedStr = '';
							
							if (!empty(comparisonProducts)) {								
								var pIt = comparisonProducts.iterator();
								var productId = null;
								
								while (pIt.hasNext()) {
									productId = pIt.next();									
									if (productId == Product.ID) {
										checkedStr = 'checked=true';
										break;
									}
								}
							}		    				
		    			</isscript>	
						<isset name="compareId" value="${dw.util.UUIDUtils.createUUID()}" scope="page"/>
						<input type="checkbox" id="compare${compareId}" class="compareCheck" ${checkedStr}/>
						<span class="hidden json">{boxId:"compare${compareId}", id:"<isprint value="${escapeJsonString(Product.ID)}"/>", catId:"<isprint value="${escapeJsonString(pdict.ProductSearchResult.category.ID)}"/>"}</span><!-- this MUST be immediately after the input/field tag. Hiden data to be attached to the input field (app.hiddenData in app.js -->
						<label for="compare${compareId}">Compare</label>						
					</isif>
				</div><!-- END: compare -->
			</isif>
			<div class="clear"><!-- FLOAT CLEAR --></div>
			</div>
		</isobject>
	</div><!-- END: producttile -->
<iselse/>
</isif>