/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input storesList : dw.util.ArrayList
*   @output customObject : Object
*
*/
importPackage( dw.system );     
importPackage( dw.util);
importPackage (dw.web);
importPackage (dw.catalog);

function execute( args : PipelineDictionary ) : Number
{
	var storesContainer  = new Object();
	
	var storesList: List = args.storesList ;
	
	var storesContainer : Object = getStoreData(storesContainer,storesList);
	
	args.customObject= storesContainer;
   
	return PIPELET_NEXT;
}

function getStoreData(storesContainer : Object,storesList:List):Object{
	
	storesContainer.stores = new Array();
	
	var storeObject  : Object =null ;
	var storeAddress : Object= null ;
	var storeImageUrl : URL= null ;
	var noDelivery : Array= null ;	

	for each (var store:Store in storesList) 
	{
		noDelivery = new Array;
		
		storeObject =  new Object();
		storeAddress = new Object();
		
		storeObject.id= store.ID;
		storeObject.name = store.name;
		
		if(!empty(store.image)){
			storeImageUrl = store.image.absURL;
			storeObject.image = storeImageUrl.toString();
		}
		if(!empty(store.storeHours)){
			storeObject.storeHours = store.storeHours.toString();
		}
		if(!empty(store.custom.deliveryLeadTime)){
			storeObject.deliveryLeadTime = store.custom.deliveryLeadTime;
		}
		if(!empty(store.custom.pickupTime)){
			storeObject.pickupTime = store.custom.pickupTime;
		}
		
		for each ( var day in store.custom.noDeliveryDays)
		{
			noDelivery.push(day.toString());
		}		
		storeObject.noDeliveryDays= noDelivery;
		
		storeObject.address = getStoreAddress(store);
			
		storesContainer.stores.push(storeObject);	
		}
	return storesContainer ;	
}

function getStoreAddress(store:Store):Object{
		var storeAddress = new Object();
		storeAddress.address1 = store.address1;
		storeAddress.address2 = store.address2;
		storeAddress.address3 = store.custom.address3;
		
		storeAddress.city = store.city;
		storeAddress.postalCode = store.postalCode;
		storeAddress.postBox = store.custom.postBox;
		storeAddress.countryCode= store.countryCode.value;		
		storeAddress.phone= store.phone;
		
		
		return storeAddress ;
}	
