/**
* Demandware Script File
* This script file will be used to edit categories, make categories offline & ExportedtoDemandware to false.
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input origFileName : String This is a sample comment.
*   @input updatedFileName : String
*
*/
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.object );
importPackage( dw.catalog );
importPackage( dw.io );
importPackage( dw.net );

var NAME_SPACE : String = "<?xml version='1.0' encoding='UTF-8'?>";
var CATEGORY_START : String = "<category category-id='";
var NEXT_LINE : String = "\r\n";
var CATEGORY_END = "</category>";
var CATELOG_END = "</catalog>";
var CATALOG_START : String = "<catalog xmlns='http://www.demandware.com/xml/impex/catalog/2006-10-31' catalog-id='";
var CLOSING_TAG : String = "'>";
var ONLINE_FLAG : String = "<online-flag>false</online-flag>";
var CUSTOM_ATTRIBUTES : String = "<custom-attributes>";
var EXPORTED : String = "<custom-attribute attribute-id='ExportedtoDemandware'>false</custom-attribute>";
var CUSTOM_ATTRIBUTES_END : String = "</custom-attributes>";


function execute( args : PipelineDictionary ) : Number
{
		var orgFilePath = File.IMPEX + File.SEPARATOR + "src" + File.SEPARATOR+"EditCategories"+File.SEPARATOR;
	    var orgFileName = args.origFileName.substring(args.origFileName.lastIndexOf("/")+1,args.origFileName.length);
	    var newFileName = args.updatedFileName.substring(args.updatedFileName.lastIndexOf("/")+1,args.updatedFileName.length);
	    var fileIn : File = new File(orgFilePath + orgFileName);
		var fileReader : FileReader = new FileReader(fileIn);		
		var xmlReader : XMLStreamReader = new XMLStreamReader(fileReader);
		//Read the XML file
		
		//Creating (XML)File Writer	
		var fileOut : File = new File(orgFilePath + newFileName);
		if (!fileOut.exists()){
			fileOut.createNewFile();
		}	
		var fileWriter : FileWriter = new FileWriter(fileOut);	
		var writer : XMLStreamWriter = new XMLStreamWriter(fileWriter);
		var parseEvent : Number = 0;
		var element : XML = null;
		var tempLocalName : String = null;
		var catIdValue : String="";
		try {
			//Start Writing the file
			fileIn = null;
			fileOut = null;
			writeCatalogStartElement(writer);
			while (xmlReader.hasNext()) {
				parseEvent = xmlReader.next();	
				if(parseEvent==XMLStreamConstants.START_ELEMENT){	
					tempLocalName = StringUtils.trim(xmlReader.getLocalName());
					if("category".equalsIgnoreCase(tempLocalName)){
						catIdValue = xmlReader.getAttributeValue(null,"category-id");
						if (catIdValue!=null && !catIdValue.equals("root")) {
							writeCategoryNodes(writer,catIdValue);
							createCategoryEnd(writer);
						}
				}
			}
					
		}
		writeEndElement(writer);
		writer.flush();
		writer.close();
		fileWriter.close();
		 return PIPELET_NEXT;
		}catch(e){
		 Logger.error("Exception while reading or writing the XML file"+e);
		 return PIPELET_ERROR;
		}	
		
	
}

function writeCategoryNodes (writer : XMLStreamWriter, catID : String) : void {
	try{
		writer.writeRaw(NEXT_LINE);
		writer.writeRaw(CATEGORY_START+catID+CLOSING_TAG);
		//Write online flag & Exported to demandware
		writer.writeRaw(ONLINE_FLAG);
		writer.writeRaw(NEXT_LINE);
		writer.writeRaw(CUSTOM_ATTRIBUTES);
		writer.writeRaw(NEXT_LINE);
		writer.writeRaw(EXPORTED);
		writer.writeRaw(NEXT_LINE);
		writer.writeRaw(CUSTOM_ATTRIBUTES_END);
	}catch(e){
		Logger.error("Exception"+e);	
	}
}	
function writeCatalogStartElement(writer : XMLStreamWriter){
	writer.writeRaw(NAME_SPACE);
	writer.writeRaw(NEXT_LINE);		
	writer.writeRaw(CATALOG_START+dw.catalog.CatalogMgr.getSiteCatalog().ID+CLOSING_TAG);		
	writer.writeRaw(NEXT_LINE);		
}
function writeEndElement(writer : XMLStreamWriter){
	writer.writeRaw(NEXT_LINE);		
	writer.writeRaw(CATELOG_END);		
	writer.writeRaw(NEXT_LINE);		
}


function createCategoryEnd(writer : XMLStreamWriter){
	writer.writeRaw(NEXT_LINE);		
	writer.writeRaw(CATEGORY_END);		
	writer.writeRaw(NEXT_LINE);		
}