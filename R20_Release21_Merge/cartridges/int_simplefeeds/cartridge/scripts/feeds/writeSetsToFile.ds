/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*  	@input variationSet : dw.util.HashSet This is a sample comment.
*  	@input normalSet : dw.util.HashSet This is a sample comment. 
*-   @output ExampleOut : Number
*
*/
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.io );

function execute( args : PipelineDictionary ) : Number
{
	try
	{
	    var writer : FileWriter=null;
	    var fileout : File = new File(File.IMPEX + File.SEPARATOR + "src" + File.SEPARATOR+ Site.getCurrent().preferences.custom.OrderableProductsIdFile);
		writer = new FileWriter(fileout);
		var variationSet : HashSet = args.variationSet;
		var normalSet : HashSet = args.normalSet;
		var writerItr : Iterator = null;
		writerItr = variationSet.iterator();
		while(writerItr.hasNext())
		{
			//var prodID : String = "";
			writer.writeLine(writerItr.next());
		}
	
		writerItr = normalSet.iterator();
		while(writerItr.hasNext())
		{
			writer.writeLine(writerItr.next());
		}
		
		writer.flush();
		writer.close();
	}
	catch(e)
	{
		Logger.error(String(e));
		return PIPELET_ERROR;
	}
    return PIPELET_NEXT;
}
