/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input productSet : dw.util.HashSet This is a sample comment.
*	@output childIdSet : dw.util.HashSet This is a sample comment.
*
*/
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.catalog );

function execute( args : PipelineDictionary ) : Number
{
	try
	{
		var inProductSetIDs : HashSet = args.productSet;
	 	var setProductObj : Product = null;
		var childItr: Iterator = null;
		 var varProductObj: Product = null;
		 var childProds : Collection = null;
	 var childSet : HashSet = new HashSet();
	 args.childIdSet = childSet;
	 if (!empty(inProductSetIDs)) {
	 	var setItr : Iterator = inProductSetIDs.iterator();
		while(setItr.hasNext()) {
			setProductObj = ProductMgr.getProduct(setItr.next());
			childProds = setProductObj.getProductSetProducts();
			childItr = childProds.iterator();
			 while(childItr.hasNext())
			 {
				varProductObj  = (Product)(childItr.next());
			 	childSet.add1(varProductObj.ID);   
			 }
		}
	 }
		args.childIdSet = childSet;
	}
	catch(e)
	{
		Logger.error(String(e));
		return PIPELET_ERROR;		
	}
   return PIPELET_NEXT;
}
