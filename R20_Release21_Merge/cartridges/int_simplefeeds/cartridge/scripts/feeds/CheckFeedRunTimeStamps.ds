/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*

*/
importScript('feeds/DateFormatUtil.ds');
importPackage( dw.io );
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.net );
function compareFileAndSitePrefTimeStamp( TaskType: String, TaskID: String, remoteFilePattern: String, fileName : String,remoteFolderURL : String, remoteFile : String, remoteLogin : String, remotePassword  : String) : Array
{

	var fileName : String = fileName;
	var sitePrefDate : String = "";
	var formattedDate : Date = formatDate(fileName);
	var fileCalendarObj : Calendar = new Calendar(new Date(formattedDate));
	var result : Boolean = false;
	var sitePrefValue : String = StringUtils.formatCalendar(fileCalendarObj, "yyyy-MM-dd-HHmmss");
	var sitePrefID : String = "";	
	var aray : Array = new Array();
	var cal : Calendar = new Calendar();
	cal.setTime(formattedDate);
	//For SOD Feed File
	if(fileName.indexOf(remoteFilePattern) >= 0 && fileName.indexOf("shrink") < 0 && TaskID.equals("startofdayinventoryprodfeed")){
		sitePrefDate = Site.getCurrent().getCustomPreferenceValue("SOD_SUCCESS_TIME");
		sitePrefID = "SOD_SUCCESS_TIME";
		if(sitePrefDate == null || empty(sitePrefDate)){
			//Site.getCurrent().setCustomPreferenceValue("SOD_SUCCESS_TIME", sitePrefValue);
			result = true;
		}
		else{
			var sitePrefCalObj : Calendar = new Calendar(createDateObj(sitePrefDate));
			result = compareTimeStamp(fileCalendarObj, sitePrefCalObj);
			/*
			if(result){
				Site.getCurrent().setCustomPreferenceValue("SOD_SUCCESS_TIME", sitePrefValue);
			}*/
		}
	}
	
	//For Master Catalog Feed File
	else if(fileName.indexOf(remoteFilePattern) >= 0 && TaskID.equals("MasterCatalog")){
		formattedDate = createFrenchCatalogDateObj(fileName);
		var millisec = formattedDate.getMilliseconds();
		sitePrefValue  = StringUtils.formatCalendar(cal, "yyyy-MM-dd-HHmmss")+millisec;
		sitePrefDate = Site.getCurrent().getCustomPreferenceValue("Master_Catalog_SUCCESS_TIME");
		sitePrefID = "Master_Catalog_SUCCESS_TIME";
		if(sitePrefDate == null || empty(sitePrefDate)){
			result = true;
		}
		else{
			result = formattedDate > createFullDateObj(sitePrefDate);
		}
	}
	
	//For French Catalog Feed File
	else if(fileName.indexOf(remoteFilePattern) >= 0 && TaskID.equals("FrenchCatalog")){
		
		formattedDate = createFrenchCatalogDateObj(fileName);
		var millisec = formattedDate.getMilliseconds();
		sitePrefValue  = StringUtils.formatCalendar(cal, "yyyy-MM-dd-HHmmss")+millisec;
		sitePrefDate = Site.getCurrent().getCustomPreferenceValue("French_Catalog_SUCCESS_TIME");
		sitePrefID = "French_Catalog_SUCCESS_TIME";
		if(sitePrefDate == null || empty(sitePrefDate)){
			result = true;
		}
		else{
			result = formattedDate > createFullDateObj(sitePrefDate);
		}
	}

	//For Ireland Catalog Feed File
	else if(fileName.indexOf(remoteFilePattern) >= 0 && TaskID.equals("IrelandCatalog")){
		
		formattedDate = createFrenchCatalogDateObj(fileName);
		var millisec = formattedDate.getMilliseconds();
		sitePrefValue  = StringUtils.formatCalendar(cal, "yyyy-MM-dd-HHmmss")+millisec;
		sitePrefDate = Site.getCurrent().getCustomPreferenceValue("Ireland_Catalog_SUCCESS_TIME");
		sitePrefID = "Ireland_Catalog_SUCCESS_TIME";
		if(sitePrefDate == null || empty(sitePrefDate)){
			result = true;
		}
		else{
			result = formattedDate > createFullDateObj(sitePrefDate);
		}
	}

	//For EU Catalog Feed File
	else if(fileName.indexOf(remoteFilePattern) >= 0 && TaskID.equals("EUCatalog")){
		
		formattedDate = createFrenchCatalogDateObj(fileName);
		var millisec = formattedDate.getMilliseconds();
		sitePrefValue  = StringUtils.formatCalendar(cal, "yyyy-MM-dd-HHmmss")+millisec;
		sitePrefDate = Site.getCurrent().getCustomPreferenceValue("EU_Catalog_SUCCESS_TIME");
		sitePrefID = "EU_Catalog_SUCCESS_TIME";
		if(sitePrefDate == null || empty(sitePrefDate)){
			result = true;
		}
		else{
			result = formattedDate > createFullDateObj(sitePrefDate);
		}
	}
	
	//For Price Feed File
	else if(fileName.indexOf(remoteFilePattern) >= 0 && TaskType.equals("Price")){
		formattedDate = createFrenchCatalogDateObj(fileName);
		var millisec = formattedDate.getMilliseconds();
		sitePrefValue  = StringUtils.formatCalendar(cal, "yyyy-MM-dd-HHmmss")+millisec;
		sitePrefDate = Site.getCurrent().getCustomPreferenceValue("Price_Merge_SUCCESS_TIME");
		sitePrefID = "Price_Merge_SUCCESS_TIME";
		if(sitePrefDate == null || empty(sitePrefDate)){
			result = true;
		}
		else{
			result = formattedDate > createFullDateObj(sitePrefDate);
		}
	}
	//Praveen:- Code change for CR168
	else{
		result = true;
	}
	if(!result){
	renameRemoteFileSFTP( remoteFolderURL, remoteFile, remoteLogin, remotePassword );
	aray.push(sitePrefDate);
	}
	else{
		aray.push(null);	
	}
	aray.push(sitePrefID);
	aray.push(sitePrefValue);
	return aray;
}

//INT 605 - added the method to compare the timestamp for the PIM files
function compareFileAndSitePrefTimeStampForPIM( TaskType: String, TaskID: String, remoteFilePattern: String, fileName : String) : Array
{
	var emBrokerID : String = "";
	
	var fileName : String = fileName;
	var sitePrefDate : String = "";
	var formattedDate : Date = getDateFromFileName(fileName);
	var fileCalendarObj : Calendar = new Calendar(new Date(formattedDate));
	var result : Boolean = false;
	var sitePrefValue : String = StringUtils.formatCalendar(fileCalendarObj, "yyyy-MM-dd-HHmmss");
	var sitePrefID : String = "";	
	var aray : Array = new Array();
	var cal : Calendar = new Calendar();
	cal.setTime(formattedDate);
	
	if(!TaskID.equals("startofdayinventoryprodfeed_pim"))
		emBrokerID = getEMBrokerIDFromFileName(fileName, remoteFilePattern);
	
	//For SOD Feed File
	if(fileName.indexOf(remoteFilePattern) >= 0 && fileName.indexOf("shrink") < 0 && TaskID.equals("startofdayinventoryprodfeed_pim")){
		sitePrefDate = Site.getCurrent().getCustomPreferenceValue("SOD_SUCCESS_TIME");
		sitePrefID = "SOD_SUCCESS_TIME";
		if(sitePrefDate == null || empty(sitePrefDate)){
			//Site.getCurrent().setCustomPreferenceValue("SOD_SUCCESS_TIME", sitePrefValue);
			result = true;
		}
		else{
			var sitePrefCalObj : Calendar = new Calendar(createDateObj(sitePrefDate));
			result = compareTimeStamp(fileCalendarObj, sitePrefCalObj);
			/*
			if(result){
				Site.getCurrent().setCustomPreferenceValue("SOD_SUCCESS_TIME", sitePrefValue);
			}*/
		}
	}
	
	//For Master Catalog Feed File
	else if(fileName.indexOf(remoteFilePattern) >= 0 && TaskID.equals("MasterCatalog_pim")){
		formattedDate = createPIMJobDateObjFromFileName(fileName);	
		var millisec = formattedDate.getMilliseconds();
		sitePrefValue  = StringUtils.formatCalendar(cal, "yyyy-MM-dd-HHmmss")+millisec+"_"+emBrokerID;;
		sitePrefDate = Site.getCurrent().getCustomPreferenceValue("Master_Catalog_SUCCESS_TIME");
		
		sitePrefID = "Master_Catalog_SUCCESS_TIME";
		if(sitePrefDate == null || empty(sitePrefDate)){
			result = true;
		}
		else{
			//result = formattedDate > createFullDateObj(sitePrefDate);
			result = isNewFile(fileName, remoteFilePattern, sitePrefDate, formattedDate, emBrokerID);
		}
	}
	
	//For French Catalog Feed File
	else if(fileName.indexOf(remoteFilePattern) >= 0 && TaskID.equals("FrenchCatalog_pim")){
		
		formattedDate = createPIMJobDateObjFromFileName(fileName);
		var millisec = formattedDate.getMilliseconds();
		sitePrefValue  = StringUtils.formatCalendar(cal, "yyyy-MM-dd-HHmmss")+millisec+"_"+emBrokerID;;
		sitePrefDate = Site.getCurrent().getCustomPreferenceValue("French_Catalog_SUCCESS_TIME");
		sitePrefID = "French_Catalog_SUCCESS_TIME";
		if(sitePrefDate == null || empty(sitePrefDate)){
			result = true;
		}
		else{
			//result = formattedDate > createFullDateObj(sitePrefDate);
			result = isNewFile(fileName, remoteFilePattern, sitePrefDate, formattedDate, emBrokerID);
		}
	}

	//For Ireland Catalog Feed File
	else if(fileName.indexOf(remoteFilePattern) >= 0 && TaskID.equals("IrelandCatalog_pim")){
		
		formattedDate = createPIMJobDateObjFromFileName(fileName);
		var millisec = formattedDate.getMilliseconds();
		sitePrefValue  = StringUtils.formatCalendar(cal, "yyyy-MM-dd-HHmmss")+millisec+"_"+emBrokerID;;
		sitePrefDate = Site.getCurrent().getCustomPreferenceValue("Ireland_Catalog_SUCCESS_TIME");
		sitePrefID = "Ireland_Catalog_SUCCESS_TIME";
		if(sitePrefDate == null || empty(sitePrefDate)){
			result = true;
		}
		else{
			//result = formattedDate > createFullDateObj(sitePrefDate);
			result = isNewFile(fileName, remoteFilePattern, sitePrefDate, formattedDate, emBrokerID);
		}
	}

	//For EU Catalog Feed File
	else if(fileName.indexOf(remoteFilePattern) >= 0 && TaskID.equals("EUCatalog_pim")){
		
		formattedDate = createPIMJobDateObjFromFileName(fileName);
		var millisec = formattedDate.getMilliseconds();
		sitePrefValue  = StringUtils.formatCalendar(cal, "yyyy-MM-dd-HHmmss")+millisec+"_"+emBrokerID;;
		sitePrefDate = Site.getCurrent().getCustomPreferenceValue("EU_Catalog_SUCCESS_TIME");
		sitePrefID = "EU_Catalog_SUCCESS_TIME";
		if(sitePrefDate == null || empty(sitePrefDate)){
			result = true;
		}
		else{
			//result = formattedDate > createFullDateObj(sitePrefDate);
			result = isNewFile(fileName, remoteFilePattern, sitePrefDate, formattedDate, emBrokerID);
		}
	}
	
	//For Price Feed File
	else if(fileName.indexOf(remoteFilePattern) >= 0 && TaskType.equals("Price")){
		formattedDate = createPIMJobDateObjFromFileName(fileName);
		var millisec = formattedDate.getMilliseconds();
		sitePrefValue  = StringUtils.formatCalendar(cal, "yyyy-MM-dd-HHmmss")+millisec+"_"+emBrokerID;
		sitePrefDate = Site.getCurrent().getCustomPreferenceValue("Price_Merge_SUCCESS_TIME");
		sitePrefID = "Price_Merge_SUCCESS_TIME";
		if(sitePrefDate == null || empty(sitePrefDate)){
			result = true;
		}
		else{
			//result = formattedDate > createFullDateObj(sitePrefDate);
			result = isNewFile(fileName, remoteFilePattern, sitePrefDate, formattedDate, emBrokerID);
		}
	}
	//Praveen:- Code change for CR168
	else{
		result = true;
	}
	if(!result){
	//renameRemoteFileSFTP( remoteFolderURL, remoteFile, remoteLogin, remotePassword );
	aray.push(sitePrefDate);
	}
	else{
		aray.push(null);	
	}
	aray.push(sitePrefID);
	aray.push(sitePrefValue);
	return aray;
}

function getEMBrokerIDFromFileName(fileName: String, remoteFilePattern: String): String{
	
	var fileNameTokens : Array = fileName.split("_");
	var tempBrokerId : String = fileNameTokens[2];
	var brokerid : String = tempBrokerId.substring(tempBrokerId.indexOf("_")+1,tempBrokerId.indexOf("."));
	return brokerid;
	
}

function isNewFile(fileName: String, remoteFilePattern: String, sitePrefDate:String, formattedDate:String, emBrokerID:String ):Boolean {
	
	if(sitePrefDate.indexOf("_")>-1){
		var sitePrefs : Array = sitePrefDate.split("_");
		
		if(formattedDate > createFullDateObj(sitePrefs[0]) || emBrokerID != sitePrefs[1] ){
			return true;
		}
	}
	else{
		return formattedDate > createFullDateObj(sitePrefDate);
	}
}



