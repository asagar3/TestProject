/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input TaskType : String This is a task type. This script mainly targeted for 'Catalog'
*   @input LogFileName : String This is a logfile name with path.
*   @input WarningCount : Number
*   @output NonSuppressWarningCount : Number
*
*/
importPackage( dw.system );
importPackage( dw.io );

function execute( args : PipelineDictionary ) : Number
{

	// read parameters
    var logFileName : String = args.LogFileName;
    if ( empty( logFileName ) )
    {
    	Logger.getLogger("suppressWarningEmails").error( "suppressWarningEmails: Parameter logFileName empty" );
    	args.NonSuppressWarningCount = args.WarningCount;
    	return PIPELET_NEXT;
    }
    var taskType : String = args.TaskType;
    if ( empty( taskType ) || taskType != 'Catalog')
    {
    	Logger.getLogger("suppressWarningEmails").error( "suppressWarningEmails: Parameter taskType empty" );
    	args.NonSuppressWarningCount = args.WarningCount;
    	return PIPELET_NEXT;
    }
    var warningCount : Number = args.WarningCount;
    if ( empty( warningCount ) )
    {
    	Logger.getLogger("suppressWarningEmails").error( "suppressWarningEmails: Parameter warningCount empty" );
    	args.NonSuppressWarningCount = args.WarningCount;
    	return PIPELET_NEXT;
    }
	
    args.NonSuppressWarningCount = warningCount - suppressWarningCount(logFileName, warningCount);

   return PIPELET_NEXT;
}
function suppressWarningCount(logFileName : String, warningCount : Number) : Number
{
	var suppressWarningCount : Number = 0;
	try {
		var warnCount : Number = 0;
		var line : String = "";
		var file : File = new File(File.IMPEX + File.SEPARATOR + "log" + File.SEPARATOR + logFileName);
		if( file.exists() ) {
			var fileReader : FileReader = new FileReader(file);
			while (line = fileReader.readLine()) {
				if (line.indexOf("[DATAWARNING]")>=0) {
					warnCount++;
					for each(var supressWarning in dw.system.Site.getCurrent().preferences.custom.supressWarnings) {
						if (line.indexOf(supressWarning)>=0) {
							suppressWarningCount++;
							break;
						}
					}
				}
			}
		}
	} catch (e) {
		Logger.getLogger("suppressWarningEmails").error( "suppressWarningCount: Error " + e );
	}
	return suppressWarningCount;
}