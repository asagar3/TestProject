/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*	@input textFile : String
*   @output pids : dw.util.HashSet
*
*/
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.io );
var pidList : HashSet = new HashSet(); 


function productsCollection(textFile : String)
{
	var fileIn : File = new File(File.IMPEX + File.SEPARATOR + "src" + File.SEPARATOR+ textFile);
	var fileReader : FileReader = new FileReader(fileIn);
	var pid : String = fileReader.readLine();
	while(pid!=null)
	{
		pidList.add(StringUtils.trim(pid));
		pid = fileReader.readLine();
	}
	fileReader.close();
}

function execute( args : PipelineDictionary ) : Number
{
	
	var File : String = args.textFile;
	if ( empty( File ) )
    {
    	Logger.error( "Parameter textFile empty" );
    	return PIPELET_ERROR;
    }
	try{
	    productsCollection(File);
	    args.pids = pidList;	
	}
	catch(e)
	{
		Logger.error(String(e));
		return PIPELET_ERROR;
	}
	return PIPELET_NEXT;
}
