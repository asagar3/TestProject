/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*	@input originalFileName : String
*   @input updatedFileName : String
*   @output xmlReaderObj : dw.io.XMLStreamReader
*   @output xmlWriterObj : dw.io.XMLStreamWriter
*   @output pids : dw.util.HashSet
*
*/
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.object );
importPackage( dw.catalog );
importPackage( dw.io );
importPackage( dw.net );
var pidList : HashSet = new HashSet(); 
function productsCollection()
{
	var fileIn : File = new File(File.IMPEX + File.SEPARATOR + "src" + File.SEPARATOR+ dw.system.Site.getCurrent().preferences.custom.productsshrinkfile);
	var fileReader : FileReader = new FileReader(fileIn);
	var pid : String = fileReader.readLine();
	while(pid!=null)
	{
		pidList.add(StringUtils.trim(pid));
		pid = fileReader.readLine();
	}
	fileReader.close();
}
function execute( args : PipelineDictionary ) : Number
{
	var orgFilePath = File.IMPEX + File.SEPARATOR + "src" + File.SEPARATOR+"EditPriceBooks"+File.SEPARATOR;
	var origFileName : String = orgFilePath + args.originalFileName.substring(args.originalFileName.lastIndexOf("/")+1,args.originalFileName.length);;
	var fileToWrite : String = orgFilePath + args.updatedFileName;
	
    //Creating (XML)File Writer
	var fileOut : File = new File(fileToWrite);
	if (!fileOut.exists()){
		fileOut.createNewFile();
	}	
	var fileWriter : FileWriter = new FileWriter(fileOut);	
	var writer : XMLStreamWriter = new XMLStreamWriter(fileWriter);
   //Creating (XML)File Reader
	var fileIn : File = new File(origFileName);
	var fileReader : FileReader = new FileReader(fileIn);		
	var xmlReader : XMLStreamReader = new XMLStreamReader(fileReader);
	productsCollection();
	args.xmlReaderObj = xmlReader;
	args.xmlWriterObj = writer;
	args.pids = pidList;
   return PIPELET_NEXT;
}
