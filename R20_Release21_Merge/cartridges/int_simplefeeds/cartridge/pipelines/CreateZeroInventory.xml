<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline group="Feeds" type="process">
  <description>Create a an inventory record for new products. This is only necessary if the SOD inventory job has failed. It creates a zero inventory which will be updated by the IAA.</description>
  <branch basename="Start">
    <segment>
      <node>
        <start-node call-mode="private" name="Start" secure="false"/>
        <node-display x="1" y="0"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="&quot;ZeroInventory&quot;" key="From_0"/>
          <key-binding alias="JobConfigurationID" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="feeds/GetJobConfiguration.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="JobConfigurationID" key="JobConfigurationID"/>
          <key-binding alias="JobConfiguration" key="JobConfiguration"/>
          <key-binding alias="Tasks" key="Tasks"/>
          <key-binding alias="FeedJobConfiguration" key="FeedJobConfiguration"/>
          <key-binding alias="Config" key="Config"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <stop-node/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="mns/InitialiseInventoryXML.ds"/>
          <config-property key="Timeout" value="3600"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="(Tasks[0])['file-pattern']" key="FilePattern"/>
          <key-binding alias="(Tasks[0])['temp-folder']" key="TempFolder"/>
          <key-binding alias="File" key="inventoryFile"/>
          <key-binding alias="inventoryWriter" key="inventoryWriter"/>
          <key-binding alias="message" key="message"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1" target-path="./+2/b3.1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="-3" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Search" pipelet-set-identifier="bc_api">
          <config-property key="DisallowOfflineCategory" value="true"/>
          <config-property key="RecursiveCategorySearch" value="true"/>
          <config-property key="RecursiveFolderSearch" value="true"/>
          <config-property key="SearchContent" value="false"/>
          <config-property key="SearchProduct" value="true"/>
          <key-binding alias="ProductSearchModel" key="ProductSearchModel"/>
          <key-binding alias="&quot;root&quot;" key="CategoryID"/>
          <key-binding alias="false" key="OrderableProductsOnly"/>
          <key-binding alias="null" key="ProductID"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <loop-node element-key="productSearchHit" iterator-key="ProductSearchModel.productSearchHits"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="do">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <decision-node condition-key="productSearchHit.getProduct().isOnline() &amp;&amp; productSearchHit.getProduct().isSearchable() &amp;&amp; !productSearchHit.getProduct().isProductSet()" condition-operator="expr"/>
              <node-display x="0" y="2"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="target" x="0" y="-1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <config-property key="ScriptFile" value="mns/CreateZeroInventory.ds"/>
                      <key-binding alias="null" key="ScriptLog"/>
                      <key-binding alias="xsw" key="Inxsw"/>
                      <key-binding alias="xsw" key="Outxsw"/>
                      <key-binding alias="dwlocales" key="dwlocales"/>
                      <key-binding alias="Count" key="localeCount"/>
                      <key-binding alias="Count" key="Count"/>
                      <key-binding alias="dwlocaleSize" key="dwLocaleLeSize"/>
                      <key-binding alias="dwlocaleSize" key="dwlocaleSize"/>
                      <key-binding alias="mapProductByLocale" key="mapProductByLocale"/>
                      <key-binding alias="productSearchHit" key="Product"/>
                      <key-binding alias="XMLStreamWriter" key="XMLStreamWriter"/>
                      <key-binding alias="XmlStreamWriter" key="XmlStreamWriter"/>
                      <key-binding alias="inventoryWriter" key="inventoryWriter"/>
                      <key-binding alias="countInventory" key="countInventory"/>
                      <key-binding alias="Message" key="Message"/>
                      <key-binding alias="productSearchHit" key="productSearchHit"/>
                    </pipelet-node>
                    <node-display x="0" y="2"/>
                    <branch basename="b2" source-connector="error">
                      <transition target-connector="in1" target-path="../../+1/b3.1">
                        <transition-display>
                          <bend-point relative-to="source" x="3" y="0"/>
                          <bend-point relative-to="target" x="-1" y="0"/>
                        </transition-display>
                      </transition>
                    </branch>
                  </node>
                  <transition target-connector="in1" target-path="../+1">
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                      <bend-point relative-to="source" x="-2" y="1"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
                <bend-point relative-to="source" x="1" y="-1"/>
                <bend-point relative-to="source" x="-2" y="-1"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="-1" y="-2"/>
            </node>
            <transition target-connector="loop" target-path="..">
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="-2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="ScriptFile" value="mns/CloseInventoryXML.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="inventoryWriter" key="inventoryWriter"/>
          <key-binding alias="message" key="message"/>
        </pipelet-node>
        <node-display orientation="horizontal" x="1" y="0"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1"/>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="ImportInventoryLists" pipelet-set-identifier="bc_api">
          <key-binding alias="File" key="ImportFile"/>
          <key-binding alias="(Tasks[0])['import-mode']" key="ImportMode"/>
          <key-binding alias="ImportStatus" key="Status"/>
        </pipelet-node>
        <node-display orientation="horizontal" x="1" y="0"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in2">
            <transition-display>
              <bend-point relative-to="target" x="2" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <join-node/>
              <node-display x="-1" y="2"/>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="!empty((Tasks[0])['error-email']) &amp;&amp; !empty(Config.custom.fromEmail)" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <call-node start-name-ref="CreateZeroInventory-Failure_Mail"/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="../+2"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="2" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="1"/>
            </node>
            <transition target-connector="in3" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="0" y="2"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="-1" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="(Tasks[0])['archive-folder']+&quot;/Error&quot;" key="From_0"/>
                <key-binding alias="archive-location" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="0" y="1"/>
            </node>
            <transition target-connector="in2" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="(Tasks[0])['archive-folder']+&quot;/Success&quot;" key="From_0"/>
          <key-binding alias="archive-location" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Custom_FeedSteps-ArchiveFeed"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Failure_Mail">
    <segment>
      <node>
        <start-node call-mode="private" name="Failure_Mail" secure="false"/>
        <node-display x="8" y="0"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="true" key="From_0"/>
          <key-binding alias="InstanceReqd" key="To_0"/>
          <key-binding alias="&quot;zero_inventory_alert&quot;" key="From_1"/>
          <key-binding alias="EmailFlow" key="To_1"/>
          <key-binding alias="new dw.util.HashMap()" key="From_2"/>
          <key-binding alias="MailParams" key="To_2"/>
          <key-binding alias="(Tasks[0])['error-email']" key="From_3"/>
          <key-binding alias="MailTo" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="MailParams.put(&quot;StatusMessage&quot;,message)" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Email-SendMail"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="mailSent"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
