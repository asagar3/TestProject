/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
* @input merchantID : String MerchantId to access conversion detail report.
* @input conversionReportURL : String URL to get conversion detail report.
* @input timeZone : String 
* @input reportName : String 
* @input userId : String 
* @input password : String 
* @output startDateAndTime : Date
* @output endDateAndTime : Date
* @output sendErrorMail : Boolean
* @output rejectedOrdersList : dw.util.ArrayList
* @output StatusMessage : String
*
*/
importPackage( dw.system );
importPackage( dw.net );
importPackage( dw.order );
importPackage( dw.util );
importScript('cybersource/libCybersource.ds');
importScript('cybersource/Date&TimeUtility.ds');

function execute( pdict : PipelineDictionary ) : Number
{

	Logger.debug("ConversionDetailReport---------------- -");
	var httpClient : HTTPClient = new HTTPClient();
	var postURL : String;
	var message : String;
	var sendErrorMail : Boolean;
	var rejectedOrdersList : dw.util.ArrayList = new ArrayList();
	//create hashmap of orders based on the query below
	var query : String = "exportStatus =" + Order.EXPORT_STATUS_NOTEXPORTED + "d";
		query += " and confirmationStatus =0d";
		//query += " and status !=" + Order.ORDER_STATUS_OPEN+ "d";
		query += " and custom.orderStatus == 'REVIEW'"+"d";
	
	var newQuery : String = "exportStatus = {0} AND custom.orderStatus = {1}";
	var orderIterator : Iterator = OrderMgr.queryOrders(newQuery, "orderNo asc", Order.EXPORT_STATUS_NOTEXPORTED,"REVIEW");
	//var orderIterator : Iterator = OrderMgr.queryOrders(query, "orderNo asc", null);
	var orderHashMap : HashMap = new HashMap();
	if (!empty(orderIterator))
	{
		while (orderIterator.hasNext())
		{
			var order : Order = orderIterator.next();
			var transactionID : String = order.paymentInstruments[0].paymentTransaction.custom.DMRequestID;//Nadeem-commenting this code as DM request ID will be stored in new variable for ireland* order.paymentTransaction.transactionID;
			
			//var transactionID1 : String = order.paymentTransaction.custom.requestId;
			if(order.getPaymentInstruments()[0].getPaymentTransaction().getPaymentProcessor() != null && (order.getPaymentInstruments()[0].getPaymentTransaction().getPaymentProcessor().ID == "CYBERSOURCE_CREDIT" || order.getPaymentInstruments()[0].getPaymentTransaction().getPaymentProcessor().ID == "CYBERSOURCE_PAYPAL")){
				orderHashMap.put(transactionID, order);
			}
		}
	}
	Logger.debug("unconfirmend orders - " + orderHashMap.length);
	if(orderHashMap.length > 0)
	{
		var startDate : String = null;
		var endDate : String = null;
		var startTime : String = null;
		var endTime : String = null;
		var currentDateAndTime : Date = new Date(); 
		var startDateAndTime : Date = null;
		var endDateAndTime : Date = null;
	 	
	 	var BM_Variable : Number = Site.getCurrent().getCustomPreferenceValue("CyberSource_Start_DateAndTime"); 	
	 	if (BM_Variable !=null && !empty(BM_Variable)){ //get Start Date and Time from BM Variable
	 		startDateAndTime = new Date (BM_Variable);
	 	} else{ //if start date is not available in BM variable	
	 		startDateAndTime = subtractMinutesFromDate(currentDateAndTime, 11);
	 	}	
	
		//startDateAndTime = subtractMinutesFromDate(currentDateAndTime, 60);
		//get End Date and Time from current Date and Time
		endDateAndTime  = subtractMinutesFromDate(currentDateAndTime, 1);
		var startCalender : dw.util.Calendar = new Calendar(startDateAndTime);
		var endCalender : dw.util.Calendar = new Calendar(endDateAndTime);
		
		var CybersourceHelper = getCybersourceHelper();
		var merchantID : String = CybersourceHelper.getMerchantID();
		var password :String = CybersourceHelper.getMerchantPassword();
		
		//fetching the variables names from site prefrences
		var merchantIDVarName : String = Site.getCurrent().getCustomPreferenceValue("conversionReportVariable_merchantID");
		var usernameVarName : String = Site.getCurrent().getCustomPreferenceValue("conversionReportVariable_username");
		var passwordVarName : String = Site.getCurrent().getCustomPreferenceValue("conversionReportVariable_password");
		var startDateVarName : String = Site.getCurrent().getCustomPreferenceValue("conversionReportVariable_startDate");
		var startTimeVarName : String = Site.getCurrent().getCustomPreferenceValue("conversionReportVariable_startTime");
		var endDateVarName : String = Site.getCurrent().getCustomPreferenceValue("conversionReportVariable_endDate");
		var endTimeVarName : String = Site.getCurrent().getCustomPreferenceValue("conversionReportVariable_endTime");
		var userName : String = Site.getCurrent().getCustomPreferenceValue("CyberSource_userName");	
	
		//var newTime : Number = getDifferenceBetweenDates(startDateAndTime, endDateAndTime);
		if (getDifferenceBetweenDates(startDateAndTime, endDateAndTime) > 24){
			/* TODO: write send mail method in "cybersource/Date&TimeUtility.ds" */		
			//sendMail();
			startDateAndTime = subtractMinutesFromDate(endDateAndTime, ((23*60) + 58));
			startCalender = new Calendar(startDateAndTime);
		}
		
		startDate = getDate (startCalender);
		startTime = getTime (startCalender);
		endDate = getDate (endCalender);
		endTime = getTime (endCalender);
		
		//Create the Post URL Values
		var postValues : String = "";
		postValues = merchantIDVarName+ "="+ merchantID;
		postValues += "&" +usernameVarName + "="+userName;
		postValues += "&" + passwordVarName+ "="+password;
		postValues += "&" + startDateVarName + "="+ startDate;
		postValues += "&" + startTimeVarName + "="+ startTime;
		postValues +=  "&" + endDateVarName + "="+ endDate;
		postValues += "&" + endTimeVarName + "="+ endTime;
	
		Logger.error("postValues sent to CyberSource for On Demand Conversion report :: " + postValues);
		//Making request to CS
		//postURL = "https://ebctest.cybersource.com/ebctest/ConversionDetailReportRequest.do";
		postURL = Site.getCurrent().getCustomPreferenceValue("conversionReportURL");
		
		httpClient.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
		httpClient.open('POST', postURL, null, null);
		httpClient.send(postValues);
	
		if (httpClient.statusCode == 200)
		{
			// Set the Start Date in BM variable
			Site.getCurrent().setCustomPreferenceValue("CyberSource_Start_DateAndTime", endDateAndTime.getTime());
			Logger.debug("Got the On Demand Conversion report ....");
			//var xmlMessage : String  = xmlString.replace("<!DOCTYPE CaseManagementOrderStatus SYSTEM \"https://ebctest.cybersource.com/ebctest/reports/dtd/cmorderstatus_1_1.dtd\">", "");
	    	//var xmlDocument : XML = new XML(xmlString);
			//var ns = new Namespace("http://reports.cybersource.com/reports/cmos/1.0");
		    message = httpClient.text;
		//	message = "<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE Report SYSTEM 'https://ebctest.cybersource.com/ebctest/reports/dtd/cdr.dtd'><?xml-stylesheet href='https://ebctest.cybersource.com/ebctest/reports/xsl/ConversionDetailReport.xsl' type='text/xsl'?><Report MerchantID='mandstest' Name='Conversion Detail Report' ReportStartDate='2011-04-06 12:00:56GMT' ReportEndDate='2011-04-06 14:30:56GMT' Version='1.1'  xmlns='https://ebctest.cybersource.com/ebctest/reports/dtd/cdr.dtd'> <Conversion MerchantReferenceNumber='bcYwwiaag2NZcaaacTrVaJAWQR' ConversionDate='2011-04-06 14:22:55' RequestID='3020996233540008284310'><OriginalDecision>REVIEW</OriginalDecision><NewDecision>ACCEPT</NewDecision><Reviewer>mandstest</Reviewer>  <ReviewerComments>Accepted</ReviewerComments><Notes><Note Date='2011-04-06 14:22:55' AddedBy='mandstest' Comment='Took ownership.' /></Notes><Queue>Review</Queue></Conversion></Report>";
			Logger.debug("XML from CyberSource for On Demand Conversion report - " + message);
		    var xmlDocument : XML = new XML(message);
		    //var ns = new Namespace("https://ebctest.cybersource.com/ebctest/reports/dtd/cdr.dtd");
			//var ns = new Namespace("https://ebctest.cybersource.com/ebctest/reports/xsl/ConversionDetailReport.xsl");
			Logger.debug("Processing daily conversion report xml ......");
			//for each (var xmlConversion:XML in xmlDocument.ns::Conversion)
			for each (var xmlConversion:XML in xmlDocument..*::["Conversion"]) {
				var orderNumber = xmlConversion.attribute("RequestID").toString();
				var order : Order = orderHashMap.get(orderNumber);
				Logger.debug("Order Id - " + xmlConversion.@RequestID.toString());
				if (order != null) {
					//new decision ACCEPT decision applied to order
					if (xmlConversion..*::["NewDecision"].toString() == 'ACCEPT') {
						//Praveen:-added for updating the custom attribute
						order.custom.orderStatus = "APPROVED";
						order.setExportStatus(Order.EXPORT_STATUS_READY);
						Logger.error("ConversionDetailReport, Order Number: "+orderNumber+" status converted to: APPROVED");
					//new decision REJECT decision applied to order
					} else if (xmlConversion..*::["NewDecision"].toString() == 'REJECT') { 
						order.custom.orderStatus = "CANCELLED";
						order.setExportStatus(Order.EXPORT_STATUS_NOTEXPORTED);
						Logger.error("ConversionDetailReport, Order Number: "+orderNumber+" status converted to: CANCELLED");
						rejectedOrdersList.add(order);
					} else {
						//do nothing
					}
				} else {
					Logger.debug("Order in Daily conversion report not found in the query results against Demandware DB");
				}
			}
		} else {
		    // error handling
		    pdict.sendErrorMail = true;
		    pdict.startDateAndTime = startDateAndTime;
		    pdict.endDateAndTime = endDateAndTime;
		    Logger.error("Error getting the coversion report -- " + httpClient.statusCode);	
		    pdict.StatusMessage=httpClient.statusCode;
		}
		if(rejectedOrdersList.size() > 0)
		{
			pdict.rejectedOrdersList = rejectedOrdersList;
		}
	}
    return PIPELET_NEXT;
}
