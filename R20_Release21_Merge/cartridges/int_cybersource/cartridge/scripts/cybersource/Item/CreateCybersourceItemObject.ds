/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:

*	 @input ipAddress : String
*    @input Basket : dw.order.Basket
*    @input ReadFromBasket : Boolean
*    @input prodIDAndNameMap : dw.util.HashMap
*	 @output lineItemList : dw.util.ArrayList
*	 
*/
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.order );
importScript('cybersource/Cybersource_Item_Object.ds');
function execute( pdict : PipelineDictionary ) : Number
{
	//var itemObject : Item_Object = new Item_Object();
	//itemObject.setProductCode("Prod01");
	//itemObject.setQuanity("2");
	//itemObject.setTotalAmount("100");
	//pdict.CyberSourceBillTo = billToObject;
	var productLineItems : Iterator = pdict.Basket.getAllProductLineItems().iterator();
	var lineItemList : ArrayList = new ArrayList;
	var prodIDAndNameMap : HashMap = pdict.prodIDAndNameMap;
	var items : Array = new Array();
	while(productLineItems.hasNext())
	{
		var productLineItem : ProductLineItem = productLineItems.next();
		var itemObject : Item_Object = new Item_Object();
		//var code : String = productLineItem.product.custom.tNumber;
		//itemObject.setMNSProductCode(productLineItem.product.custom.tNumber);
		
		itemObject.setProductSKU(productLineItem.product.custom.tNumber);
		itemObject.setProductCode(productLineItem.product.custom.tNumber);
		if(prodIDAndNameMap != null && prodIDAndNameMap.containsKey(productLineItem.product.ID))
		{
			itemObject.setProductName(prodIDAndNameMap.get(productLineItem.product.ID));	
		}
		else
		{
			itemObject.setProductName(productLineItem.product.name);
		}
		itemObject.setUnitPrice(productLineItem.basePrice.value);
		itemObject.setQuanity(productLineItem.quantity.value);
		lineItemList.add(itemObject);
	}
	
	pdict.lineItemList = lineItemList;
	
    return PIPELET_NEXT;
}
function getLineItems() : ArrayList{

	var items : ArrayList = new ArrayList();
	
	itemObject.setProductCode("Prod01");
	itemObject.setQuanity("2");
	itemObject.setTotalAmount("100");
	items.add(itemObject);
	return items;	
}
