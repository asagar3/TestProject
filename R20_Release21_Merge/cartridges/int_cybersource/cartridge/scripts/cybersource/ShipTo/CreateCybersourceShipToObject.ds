/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*    @input Basket : dw.order.Basket
*    @output CybersourceBillTo : Object
*
*/
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.order );
importScript('cybersource/Cybersource_ShipTo_Object.ds');

function execute( pdict : PipelineDictionary ) : Number
{
	var basket : Basket = pdict.Basket;
	
	var shipToObject: ShipTo_Object = new ShipTo_Object();
	var shippingAddress : OrderAddress = basket.defaultShipment.shippingAddress;
	var shippingMethod : ShippingMethod = null;
	
	var it : Iterator = basket.getShipments().iterator();
	// TODO: This code purposely does not handle the case of
	// multiple shipments per order
	if(shippingAddress == null){
		while(it.hasNext()){
			var shipment : Shipment = it.next();
			shippingAddress = shipment.getShippingAddress();
			shippingMethod = shipment.getShippingMethod();
			if(shippingAddress != null){
				break;
			}
		}
	}
	if( !empty(shippingAddress) && !empty(basket) ) {
		shipToObject.setFirstName(shippingAddress.firstName);
		shipToObject.setLastName(shippingAddress.lastName);
		shipToObject.setStreet1(shippingAddress.address1);
		shipToObject.setStreet2(shippingAddress.address2);
		shipToObject.setStreet3(shippingAddress.custom.streetName);
		shipToObject.setStreet4(shippingAddress.custom.residence);
		shipToObject.setCounty(shippingAddress.postBox);
		shipToObject.setCity(shippingAddress.city);
		shipToObject.setState(shippingAddress.stateCode);
		shipToObject.setPostalCode(shippingAddress.postalCode);
		//CR 3030 : Start of code to Send FR as Shipping address country code to Cybersource
		if (shippingAddress.countryCode.value.equals("MC")){
			shipToObject.setCountry(dw.web.Resource.msg('country.code','forms',null) );
		} else {
			shipToObject.setCountry( shippingAddress.countryCode );
		}
		//CR 3030 : End of code to Send FR as Shipping address country code to Cybersource		
		shipToObject.setPhoneNumber(shippingAddress.phone);
		shipToObject.setEmail(basket.customerEmail);
		/*
		Logger.error("firstName mapped to firstName value is  "+shippingAddress.firstName);
		Logger.error("lastName mapped to lastName value is  "+shippingAddress.lastName);
		Logger.error("street1 mapped to address1 value is  "+shippingAddress.address1);
		Logger.error("street2 mapped to address2 value is  "+shippingAddress.address2);
		Logger.error("street3 mapped to streetName value is  "+shippingAddress.custom.streetName);
		Logger.error("street4 mapped to residence value is  "+shippingAddress.custom.residence);
		Logger.error("country mapped to countryCode, value is  "+shippingAddress.countryCode);
		Logger.error("city Name mapped to city value is  "+shippingAddress.city);
		Logger.error("postalCode mapped to postalCode, value is  "+shippingAddress.postalCode);
		Logger.error("County mapped to PO-Box/PlaceName value is  "+shippingAddress.postBox);
		Logger.error("email mapped to customerEmail, value is  "+basket.customerEmail);
		Logger.error("phoneNumber mapped to phone, value is  "+shippingAddress.phone);
		*/
		/*
		if( !empty(shippingMethod) ) {
			shipToObject.setShippingMethod(shippingMethod.displayName);
		} else {
			shipToObject.setShippingMethod("N/A");
		}*/
		//QC defect fixing[718]
		shipToObject.setShippingMethod(basket.defaultShipment.shippingMethod.ID);
	}
	pdict.CybersourceBillTo = shipToObject;

    return PIPELET_NEXT;
}
