/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*  @input orderNo : String 
*  @input creationDate : Date
*  @output deleteObject : Boolean
*  @output status : String
*  @output StatusMessage : String
*
*/

importPackage( dw.system );
importPackage( dw.net );
importPackage( dw.order );
importPackage( dw.value );
importPackage( dw.customer );
importScript("int_worldpay:lib/worldPay.ds");

function execute( pdict : PipelineDictionary ) : Number
{
   	Logger.error("@@@@int_worldpay:Pull order status for >>>>"+pdict.orderNo);
   	pdict.deleteObject=false;
   	//var creationDate =pdict.creationDate;
   	var pendingOrderTime : Number = Site.getCurrent().getCustomPreferenceValue("worldpayPendingTime");
   	var currentDateAndTime : Date = new Date(); 
   	var dateAndTimeToCompare : Date = addMinutesToDate(pdict.creationDate, pendingOrderTime);
   	try{  
   	var result : String = createOrderInquiryMessage(pdict.orderNo);   		
   	var response : ResponseData = parseResponse(result);
	var status : String = "" ;
	if (response == null) {
		pdict.deleteObject=true;
		return PIPELET_ERROR;		
	}
	if (response.isError()) {
		if(currentDateAndTime > dateAndTimeToCompare && response.errorCode==5){
		 pdict.status = "NOT_EXISTS";
		}
		pdict.deleteObject=true;
		return PIPELET_NEXT;
	}
	
	 status  = response.lastEvent.toString();
	 if(status.equalsIgnoreCase("SHOPPER_REDIRECTED"))
	 {
	 	if(currentDateAndTime > dateAndTimeToCompare){
	 	 pdict.status = "NOT_EXISTS";
	 	}
	 	 pdict.deleteObject=true;
	 	 return PIPELET_NEXT;
	 }
	 
	if(status.equalsIgnoreCase("authorised") || status.equalsIgnoreCase("captured")){
		pdict.deleteObject=false;
	}else{
		pdict.deleteObject=true ;
	}
	
	pdict.status=status;
   	}catch(e){
   		Logger.error("@@@@int_worldpay_Pull_Order_Status:Exception in Script@@@@@"+e);
   		pdict.deleteObject=true;
   		pdict.StatusMessage="Int_worldpay_Pull_Order_Status:Exception in Script,Error detail:"+e;
   		return PIPELET_ERROR;
   	}
	
   	
   	
   	return PIPELET_NEXT;
}
function addMinutesToDate(date: Date, minutes : Number) : Date {	
	var newDateTime : Number = date.getTime() + (minutes * 60 * 1000); // convert minutes into milliseconds	
	return new Date(newDateTime);
}




