<iscomment>Vertical Carousel - Rich Relevance - Pagination</iscomment>
<script type="text/javascript">
/*
 * The Carousel will only pre-load the maximum number of products to be shown 
 * at any one time, while the rest of the products will be loaded as and when
 * needed - i.e. the user clicks the next button on the carousel.
 *
 */
 
$(".richRelevanceRecommendations").each(function(){
	var pMap = "${productMap}".substring(1, "${productMap}".length-1),
		placementOutput = "${placementOutput}",
		products = pMap.split(","),
		prodsToLoad = new Array([]),
		loadedBefore = 0,
		_this = $(this),
		prev = _this.find("div.prev"),
		next = _this.find("div.next"),
		showPerPage = 3,
		elemHeight = 250,
		maxProds = "${maxRecommendedPrds}",
		currentPosition = 0,
		count = 0;
	
	var splittingindex = products[0].indexOf("=");
	var tempprod = [products[0].substring(0,splittingindex), products[0].substring(splittingindex+1,products[0].length)];
	if(tempprod[0].substring(0,1) == " "){
		tempprod[0] = tempprod[0].substring(1);
	}
	var find = "&amp;";
	var re = new RegExp(find, "g");
	tempprod[1] = tempprod[1].replace(re,"&");
	prodsToLoad[0] = tempprod;
	// add the rest of the products
	for(var i = 1; products.length > maxProds ? i < maxProds : i < products.length; i++){
		splittingindex = products[i].indexOf("=");
		tempprod = [products[i].substring(0,splittingindex), products[i].substring(splittingindex+1,products[i].length)];
		if(tempprod[0].substring(0,1) == " "){
			tempprod[0] = tempprod[0].substring(1);
		}
		tempprod[1] = tempprod[1].replace(re,"&");
		prodsToLoad.push(tempprod);
	}


	// count the number of items that we have received in the array
	var numberOfItems = prodsToLoad.length;
	/*
	 * Once the document is fully loaded, then we begin to populate the carousel with
	 * products from the prodsToLoad array
	 */
	$(document).ready(function(){
		
		// populate the first items
		addProductsVertical(showPerPage, false);
		
		// show the next arrow
		next.css("visibility","visible");		
		
		// bind the next arrow
		next.live("click", function(){
			
			// check how many products have been loaded before each loop
			loadedBefore = $('.verticalrecommendations li').length;
			numberOfItems = prodsToLoad.length + loadedBefore;
			
			// check if we have more products to load, and if we are in a correct position to load them
			if(loadedBefore != numberOfItems && currentPosition >= loadedBefore - showPerPage){
				
				// check how many products to load
				if(numberOfItems - loadedBefore >= showPerPage){
					addProductsVertical(showPerPage, true);
				}else{
					addProductsVertical(numberOfItems - loadedBefore, true);
				}
			}else{
				
				// if we are not loading any more products, here we control the scrolling functionality
				if(currentPosition + showPerPage >= numberOfItems){
					next.css('visibility','hidden');
				}else{
					var yslide = (loadedBefore - (showPerPage + currentPosition)) > showPerPage ? showPerPage : (loadedBefore - (showPerPage + currentPosition));
					$('.verticalrecommendations').animate({
						'marginTop' : "-=" + elemHeight * yslide
					});
					prev.css('visibility', 'visible');
					currentPosition += yslide;
					if(currentPosition >= numberOfItems - showPerPage){
						next.css('visibility','hidden');
					}
				}
			}
		});
		
		// bind the previous arrow
		prev.live("click", function(){
			
			// make sure we don't scroll too far upwards
			if(currentPosition > showPerPage){
				$('.verticalrecommendations').animate({
					'marginTop' : "+=" + elemHeight * showPerPage
				});
				currentPosition -= showPerPage;
				next.css('visibility', 'visible');
			}else if(currentPosition > 0){
				$('.verticalrecommendations').animate({
					'marginTop' : "+=" + elemHeight * currentPosition
				});
				currentPosition = 0;
				next.css('visibility', 'visible');
				prev.css('visibility', 'hidden');
			}else{
				prev.css('visibility', 'hidden');
			}
		});
	});
		

	
	/*
	 * This function is used to do the AJAX calls to the server which query the product
	 * and then add the response to the carousel. The function takes two parameters; 1. The 
	 * number of products to add, and whether or not to slide the carousel once the call has
	 * finished, for example, when we first load the carousel, we will use (3, false) as the parameters
	 */
	function addProductsVertical(numberToAdd, slide){
		$('.rrOverlay').css('visibility', 'visible');
		// decrement the loop counter of how many products are left to add
		var left = numberToAdd - 1;
		
		//check we still have products to load
		if(prodsToLoad.length > 0){
			
			// create the url that we are calling with AJAX, using the product information from the prodsToLoad array,
			// then remove the product from prodsToLoad
			var nextProduct = prodsToLoad[0],
				url = "${URLUtils.url('RichRelevance-GetRemoteInclude')}";
			url += "?key=" + nextProduct[0] + "&placementOutput=" + placementOutput;
			var tempurl = nextProduct[1];
			prodsToLoad.splice(0, 1);
			jQuery.ajax({
				url: url,
				success: function(response){
					// check if we should call this function again, to search another product
					if(left > 0){
						
						/*
						 	check if the response contains a product, if not, decrement numberToAdd and 
							call function again with the old numberToAdd, if it does, call function again
							but with the already decremented value
						*/
						if(response.indexOf("<li") == -1){
							numberOfItems--;
							addProductsVertical(numberToAdd, slide);
						}else{
							$('.verticalrecommendations').append(response);
							$('.verticalrecommendations li:last').find('a').each(function(){
								if($(this).hasClass('rrlink')){
									$(this).attr('href', tempurl);
								}
							});
							addProductsVertical(left, slide);
						}
					}else if(response.indexOf("<li") == -1){
						/*
							we only get here if we have come into the function if the parament numberToAdd == 1,
							then, we check if the last call found a product, if not, call function again to get another
						*/
						numberOfItems--;
						addProductsVertical(1, slide);
					}else{
						$('.verticalrecommendations').append(response);
						$('.verticalrecommendations li:last').find('a').each(function(){
							if($(this).hasClass('rrlink')){
								$(this).attr('href', tempurl);
							}
						});			
						/*
							check the length of the carousel, if less than the number of products we were supposed to add, and
							we have more products to load, then call function to add another, if no more are left and we are
							still below the number of products we were supposed to add, then we scroll the carousel as far
							as we can, then, finally, if we have added the correct amount, then we check the slide boolean, if
							that is true, then we slide the carousel
						*/
						var carLen = $('.verticalrecommendations li').length,
							loadedAfter = carLen - loadedBefore;
						if(loadedAfter < showPerPage && numberOfItems > carLen){
							numberOfItems --;
							addProductsVertical(1, slide);
						}else if(loadedAfter < showPerPage){
							numberOfItems -= (showPerPage - loadedAfter);
							$('.verticalrecommendations').animate({'marginTop' : '-=' + elemHeight * loadedAfter});
							prev.css('visibility','visible');
							currentPosition += loadedAfter;
							$('.rrOverlay').css('visibility', 'hidden');
						}else if(slide){
							$('.verticalrecommendations').animate({'marginTop' : '-=' + elemHeight * loadedAfter});
							prev.css('visibility','visible');
							$('.rrOverlay').css('visibility', 'hidden');
							currentPosition += showPerPage;
						}else{
							$('.rrOverlay').css('visibility', 'hidden');
						}
					}
			 	}
			});
		}else{
			/*
				check if we should scroll, and by how much
			*/
			if(currentPosition  + showPerPage < $('.verticalrecommendations li').length){
					$('.verticalrecommendations').animate({'marginTop' : '-=' + elemHeight * ($('.verticalrecommendations li').length - currentPosition - showPerPage)});
					currentPosition += ($('.verticalrecommendations li').length - currentPosition - showPerPage);
					prev.css('visibility','visible');
			}
			
			//always hide the next button, as if we get to here no more products can be loaded, and we have already scrolled if neeeded
			next.css('visibility', 'hidden');
			$('.rrOverlay').css('visibility', 'hidden');
		}
		if(prodsToLoad.length === 0){
			// safety check for if we have no more products
			next.css('visibility','hidden');
		}
	 }
});

</script>