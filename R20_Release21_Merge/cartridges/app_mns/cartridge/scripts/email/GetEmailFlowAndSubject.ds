/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input emailFlowValue : String
*   @input emailFlowByReasonCode : Array
*   @input emailSubjectByReasonCode : Array  
*   @output EmailFlow : String
*	@output MailSubject : String
*/
importPackage( dw.system );

function execute( pdict : PipelineDictionary ) : Number
{

    // read pipeline dictionary input parameter
    // ... = args.ExampleIn;
	var emailFlow : String = "";
	var emailSubject : String = "";
	var emailFlowValue = pdict.emailFlowValue;
	var emailFlowPreferences = pdict.emailFlowByReasonCode;
	var emailSubjectByReasonCodePreferences = pdict.emailSubjectByReasonCode; 
	try
	{
	if (!empty(emailFlowValue)) {
	//	var emailFlowPreferences : Array = dw.system.Site.getCurrent().preferences.custom.emailFlowByReasonCode;
		for (var i=0; i < emailFlowPreferences.length; i++) {
			if (emailFlowValue == emailFlowPreferences[i].getValue()) {
				emailFlow = emailFlowPreferences[i].getDisplayValue();
				break;
			}
		}
//		var emailSubjectByReasonCodePreferences : Array = dw.system.Site.getCurrent().preferences.custom.emailSubjectByReasonCode;
		for (var i=0; i < emailSubjectByReasonCodePreferences.length; i++) {
			if (emailFlowValue == emailSubjectByReasonCodePreferences[i].getValue()) {
				emailSubject = emailSubjectByReasonCodePreferences[i].getDisplayValue();
				break;
			}
		}
	}
    pdict.EmailFlow = emailFlow ;
	pdict.MailSubject = emailSubject;
   	return PIPELET_NEXT;
	}
	catch(Ex)
	{
		return PIPELET_ERROR;	
	}
	
}
