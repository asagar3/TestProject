/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
* This File Adds the variation attribute to the Order XML File for Cabestan Integration.
*
*   @input Order : dw.order.Order The order..
*   @input siteLocale : String
*   @input klarnaGender : String
*   @input klarnaDOB : String
*	@input paymentInstrumentObj: OrderPaymentInstrument
*	@output cyberMerchantID : String
*/
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.util );
importPackage (dw.catalog );
importPackage (dw.value);


function execute( pdict : PipelineDictionary ) : Number
{
	var shipmentLineItems : Collection =  pdict.Order.getShipments();
	var shipmentLineItemsItr : Iterator = shipmentLineItems.iterator();
	var shipmentlineItem : Shipment =  shipmentLineItems[0];
	var shippingAddress : OrderAddress =  shipmentlineItem.getShippingAddress();
 
	//Praveen: QC[353] defect fixing
	if(null != pdict.Order.paymentInstruments && pdict.Order.paymentInstruments.length>0 && null != pdict.Order.paymentInstruments[0].paymentTransaction) {
		if(dw.system.Site.current.getName().equals("FranceSite")){	
			if (pdict.Order.paymentInstruments[0].paymentTransaction.paymentProcessor.ID.equals("CYBERSOURCE_PAYPAL")) {
				pdict.Order.paymentInstruments[0].paymentTransaction.custom.merchantID = Site.getCurrent().getCustomPreferenceValue("CsPayPalMerchantId");
				pdict.Order.paymentInstruments[0].paymentTransaction.custom.paymentInstrument = dw.order.PaymentMgr.getPaymentMethod("PayPal").ID;
			}
			else {
				pdict.Order.paymentInstruments[0].paymentTransaction.custom.merchantID = Site.getCurrent().getCustomPreferenceValue("CsMerchantId");
				pdict.Order.paymentInstruments[0].paymentTransaction.custom.paymentInstrument = dw.order.PaymentMgr.getPaymentMethod(dw.order.PaymentInstrument.METHOD_CREDIT_CARD).ID;
			}			
		}
		else if (pdict.Order.paymentInstruments[0].paymentTransaction.paymentProcessor.ID.equals("CYBERSOURCE_PAYPAL")) {
				pdict.Order.paymentInstruments[0].paymentTransaction.custom.merchantID = Site.getCurrent().getCustomPreferenceValue("CsPayPalMerchantId");
				pdict.Order.paymentInstruments[0].paymentTransaction.custom.paymentInstrument = dw.order.PaymentMgr.getPaymentMethod("PayPal").ID;
		}
		else if(pdict.Order.paymentInstruments[0].paymentTransaction.paymentProcessor.ID.equals("WORLDPAY")){
			pdict.Order.paymentInstruments[0].paymentTransaction.custom.merchantID = Site.getCurrent().getCustomPreferenceValue("WorldPayMerchantCode");
		}else if(pdict.Order.paymentInstruments[0].paymentTransaction.paymentProcessor.ID.equals("KLARNA")){
			//Praveen: Making changes for BML
			//CR 3079 : select merchant_id on the basis of Country and shipping method
			//	pdict.Order.paymentInstruments[0].paymentTransaction.custom.merchantID = Site.getCurrent().getCustomPreferenceValue("KLARNA_MERCHANT_ID");
				
				var merchant_map : dw.util.Collection = dw.system.Site.getCurrent().getCustomPreferenceValue("KLARNA_MERCHANT_ID_MAP");
				var KlarnaCountry : String = shippingAddress.getCountryCode().value;
				var shipping_Method : String = shipmentlineItem.getShippingMethod().ID;
				var merchant_code : String = "";
				if(System.getInstanceType()==System.PRODUCTION_SYSTEM){
				    merchant_code  = KlarnaCountry + "_" + "PRODUCTION" + "_" + shipping_Method;
				}else{
					merchant_code = KlarnaCountry + "_" + shipping_Method;
				}
					for each (var m_id : EnumValue in merchant_map) {
						if(m_id.getValue().equalsIgnoreCase(merchant_code)){								
							pdict.Order.paymentInstruments[0].paymentTransaction.custom.merchantID = m_id.getDisplayValue();;
							break;
						}		
					}				
				pdict.Order.paymentInstruments[0].paymentTransaction.custom.paymentInstrument = dw.order.PaymentMgr.getPaymentMethod(dw.order.PaymentInstrument.METHOD_BML).ID;
				pdict.Order.paymentInstruments[0].paymentTransaction.custom.gender = pdict.klarnaGender;
				pdict.Order.paymentInstruments[0].paymentTransaction.custom.dob = pdict.klarnaDOB;
					
		}else{
			pdict.Order.paymentInstruments[0].paymentTransaction.custom.merchantID = Site.getCurrent().getCustomPreferenceValue("CsPaMerchantId");
			pdict.Order.paymentInstruments[0].paymentTransaction.custom.paymentInstrument = dw.order.PaymentMgr.getPaymentMethod(dw.order.PaymentInstrument.METHOD_CREDIT_CARD).ID;
		}  
		//pdict.Order.paymentInstruments[0].paymentTransaction.custom.merchantReferenceCode = Site.getCurrent().getCustomPreferenceValue("CsSecurityKey");
		pdict.Order.paymentInstruments[0].paymentTransaction.custom.merchantReferenceCode = pdict.Order.orderNo;
	} else {
		pdict.Order.setExportStatus(Order.EXPORT_STATUS_READY);
		pdict.Order.custom.orderStatus = "APPROVED";	
	}
	
	while(shipmentLineItemsItr.hasNext())
	{
		var shipmentCntr : dw.order.Shipment =  shipmentLineItemsItr.next();
		var productLineItems : Collection  =  shipmentCntr.getProductLineItems();
		var productLineItemsItr : Iterator = productLineItems.iterator();
		var productLineItemx : ProductLineItem = null;
		while(productLineItemsItr.hasNext())
		{
			try
			{
				var productLineItemx : ProductLineItem = productLineItemsItr.next();
				var prod : Product = productLineItemx.getProduct();
				//Praveen:- Adding custom attributes UPC & reducePriceFlag in ProductLineItem
				productLineItemx.custom.UPCID = prod.UPC;
				productLineItemx.custom.tNumber = prod.custom.tNumber;
				productLineItemx.custom.reducedPriceIndicator = prod.custom.reducePriceFlag;
				
				//Praveen: Adding the custom attributes for CR168
				//productLineItemx.custom.productName = prod.getName();
				productLineItemx.custom.productID = prod.ID;
				//Praveen: CR168 END
				
				
				var pvm : ProductVariationModel = prod.variationModel;
				var variationAttributes : Collection = pvm.getProductVariationAttributes();
				//Logger.error("Total number of variationAttributes are  : " + variationAttributes.length);
				var variationAttributeItr : Iterator = variationAttributes.iterator();
				var VA : ProductVariationAttribute = null;
				/*
				for(var i=0; i<variationAttributes.length;i++) {
					Logger.error("loop...."+variationAttributes[i].attributeID);
				}
				*/
				while(variationAttributeItr.hasNext())
				{
					VA = variationAttributeItr.next();
					var vaID : String = VA.attributeID;
				//	Logger.error("VARIATIONS: --------------------------"+vaID + "  "+VA.ID);
					if(vaID == "color")
					{
						//get all the values of the variant attribute
						var vavals : Collection = pvm.getAllValues(VA);
						var vavalsItr : Iterator = vavals.iterator();
						//get the selected value
						var selectedValue : ProductVariationAttributeValue = pvm.getSelectedValue(VA);
					//	Logger.error("display value for the selected Variation is : " + selectedValue.displayValue);
						var variationValue : String = selectedValue.displayValue;
						//Praveen:- Adding custom attributes productColor
						productLineItemx.custom.ProductColor = prod.custom.productColor.trim();
						//Logger.error("Final End");
					}	
					if(vaID == "size")
					{
						//get all the values of the variant attribute
						var vavals : Collection = pvm.getAllValues(VA);
						var vavalsItr : Iterator = vavals.iterator();
						//get the selected value
						var selectedValue : ProductVariationAttributeValue = pvm.getSelectedValue(VA);
						//Logger.error("display value for the selected Variation is : " + selectedValue.displayValue);
						var variationValue : String = selectedValue.displayValue;
						//Praveen:- Adding custom attributes productSize1 & productSize2
					
						productLineItemx.custom.ProductSize1 = prod.custom.productSize;
						productLineItemx.custom.ProductSize2 = prod.custom.productSecondSize;
						Logger.error("Final End");
					}	
				}
			}catch(e){
				
			}	
		}	
	}
	//Praveen:- Code for adding Current Site ID Order custom attribute
	//var siteID : String = Site.getCurrent().getCustomPreferenceValue("siteID");
	//var siteIDList : Array = Site.getCurrent().getCustomPreferenceValue("siteIDSet");
	var siteIDList : Array = Site.getCurrent().getCustomPreferenceValue("siteIDSet");
	var localeObject : Locale = Locale.getLocale(pdict.siteLocale);
	var countryName : String = localeObject.getCountry();
	if(siteIDList != null){
		var defaultSiteID : String;
		for(var i=0 ; i<siteIDList.length ;i++) {
			var siteId = siteIDList[i].getValue();
			if(siteId == "default") {
				defaultSiteID = siteIDList[i].getDisplayValue();
				continue;
			}
			if(siteId==countryName){
				pdict.Order.custom.siteID = siteIDList[i].getDisplayValue();
				break;
			}	
		}
		if(empty(pdict.Order.custom.siteID)){
			pdict.Order.custom.siteID = defaultSiteID;
		}
				 	
	}
	//pdict.Order.custom.siteID = siteID;
	//Nadeem:Adding orderPoint and orderChannel in the website order 
	if(empty(pdict.Order.custom.orderPoint))
	{
		pdict.Order.custom.orderPoint= pdict.Order.custom.siteID;
	}
	if(empty(pdict.Order.custom.orderChannel))
	{
		pdict.Order.custom.orderChannel=Site.getCurrent().getCustomPreferenceValue("orderChannel");
	}
	pdict.Order.custom.deliveryStoreID= shipmentCntr.shippingAddress.custom.deliveryStoreID;
	//Praveen:- Code for adding order level discounts to Order custom attribute
	var orderPromotions : Collection = pdict.Order.priceAdjustments;
	var orderPromotionsItr : Iterator = orderPromotions.iterator();
//	while(orderPromotionsItr.hasNext())
//	{
//		pdict.Order.custom.promotionName = orderPromotionsItr.next().promotion.calloutMsg.source;	
//	}	
    return PIPELET_NEXT;
}