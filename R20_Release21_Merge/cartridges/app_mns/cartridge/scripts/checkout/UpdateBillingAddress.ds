/**
 * Update the given billing address and copies the address details 
 * stored in the given address form to the billing address.
 *
 * @input BillingAddress : dw.order.OrderAddress The address to update.
 * @input AddressForm : dw.web.FormGroup The address form.
 */
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.web );

function execute( pdict : PipelineDictionary ) : Number
{
	var billingAddress : OrderAddress = pdict.BillingAddress;
	var addressFields : FormGroup = pdict.AddressForm.addressFields;
	
	// copy the address details
	
	billingAddress.setFirstName( addressFields.firstName.value );
	billingAddress.setLastName( addressFields.lastName.value );
	if(addressFields.country.value == "GB") {
		if (!empty(addressFields.addressline1)){
			billingAddress.setAddress1( addressFields.addressline1.value );
		} else {
			billingAddress.setAddress1( addressFields.address1.value );
		}
		if (!empty(addressFields.addressline2)){
			billingAddress.setAddress2( addressFields.addressline2.value );
		} else {
			billingAddress.setAddress2( addressFields.address2.value );
		}
		if (!empty(addressFields.county)){
			billingAddress.setStateCode( addressFields.county.value );
		} else {
			billingAddress.setStateCode( addressFields.states.state.value );
		}	
	}else {
		billingAddress.setAddress1( addressFields.address1.value );
		billingAddress.setAddress2( addressFields.address2.value );
		billingAddress.custom.residence = addressFields.residence.value;
		billingAddress.custom.streetName =  addressFields.streetName.value ;
		billingAddress.setPostBox( addressFields.postBox.value );
		billingAddress.setStateCode( addressFields.states.state.value );
	}
	if (!empty(addressFields.address3)){
		billingAddress.custom.address3 = addressFields.address3.value;
	}
	billingAddress.setCity( addressFields.city.value );
	billingAddress.setPostalCode( addressFields.zip.value );
	billingAddress.setCountryCode( addressFields.country.value );
	var phone : String = "";
	if (addressFields.phone.value!=null) {
		phone = addressFields.phone.value.replace(/\s+/g, "");
	} else {
		phone = addressFields.phone.value;
	}
	billingAddress.setPhone( phone );
	billingAddress.setTitle( addressFields.title.value );
	

	if (!empty(addressFields.address3)){
		billingAddress.custom.address3 = addressFields.address3.value;
	}
	
	var alternatePhone : String = "";
	if (addressFields.alternateContactNumber.value!=null) {
		alternatePhone = addressFields.alternateContactNumber.value.replace(/\s+/g, "");
	} else {
		alternatePhone = addressFields.alternateContactNumber.value;
	}

	billingAddress.custom.alternateContactNumber = alternatePhone;
		
    return PIPELET_NEXT;
}